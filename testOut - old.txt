> DEBUG: allocated [a Symbol] + from 0x60005aa78 to 0x60005aa90 ( 24 B ) in 8600 ns
DEBUG: allocated nil from 0x60005aa90 to 0x60005aaa0 ( 16 B ) in 2900 ns
DEBUG: allocated [a Const] ( + nil ) from 0x60005aaa0 to 0x60005aac0 ( 32 B ) in 1600 ns
DEBUG: allocated [an Integer] 0 from 0x60005aac0 to 0x60005aad8 ( 24 B ) in 1600 ns
0
> DEBUG: allocated [a Symbol] + from 0x60005aad8 to 0x60005aaf0 ( 24 B ) in 1600 ns
DEBUG: allocated [an Integer] 1 from 0x60005aaf0 to 0x60005ab08 ( 24 B ) in 1300 ns
DEBUG: allocated [an Integer] 1 from 0x60005ab08 to 0x60005ab20 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005ab20 to 0x60005ab30 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 1 nil ) from 0x60005ab30 to 0x60005ab50 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 1 ( 1 nil ) ) from 0x60005ab50 to 0x60005ab70 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( + ( 1 ( 1 nil ) ) ) from 0x60005ab70 to 0x60005ab90 ( 32 B ) in 1300 ns
DEBUG: allocated [an Integer] 2 from 0x60005ab90 to 0x60005aba8 ( 24 B ) in 1300 ns
2
> DEBUG: allocated [a Symbol] + from 0x60005aba8 to 0x60005abc0 ( 24 B ) in 1700 ns
DEBUG: allocated [an Integer] 5 from 0x60005abc0 to 0x60005abd8 ( 24 B ) in 800 ns
DEBUG: allocated [an Integer] 5 from 0x60005abd8 to 0x60005abf0 ( 24 B ) in 900 ns
DEBUG: allocated [an Integer] 5 from 0x60005abf0 to 0x60005ac08 ( 24 B ) in 1600 ns
DEBUG: allocated [an Integer] 5 from 0x60005ac08 to 0x60005ac20 ( 24 B ) in 2000 ns
DEBUG: allocated [an Integer] 5 from 0x60005ac20 to 0x60005ac38 ( 24 B ) in 1700 ns
DEBUG: allocated nil from 0x60005ac38 to 0x60005ac48 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( 5 nil ) from 0x60005ac48 to 0x60005ac68 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( 5 ( 5 nil ) ) from 0x60005ac68 to 0x60005ac88 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 5 ( 5 ( 5 nil ) ) ) from 0x60005ac88 to 0x60005aca8 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 5 ( 5 ( 5 ( 5 nil ) ) ) ) from 0x60005aca8 to 0x60005acc8 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 5 ( 5 ( 5 ( 5 ( 5 nil ) ) ) ) ) from 0x60005acc8 to 0x60005ace8 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( + ( 5 ( 5 ( 5 ( 5 ( 5 nil ) ) ) ) ) ) from 0x60005ace8 to 0x60005ad08 ( 32 B ) in 1200 ns
DEBUG: allocated [an Integer] 25 from 0x60005ad08 to 0x60005ad20 ( 24 B ) in 1200 ns
25
> DEBUG: allocated [a Symbol] - from 0x60005ad20 to 0x60005ad38 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005ad38 to 0x60005ad48 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( - nil ) from 0x60005ad48 to 0x60005ad68 ( 32 B ) in 2500 ns
no args for minus operatorDEBUG: allocated [an Object]  from 0x60005ad68 to 0x60005ad78 ( 16 B ) in 2500 ns

> DEBUG: allocated [a Symbol] - from 0x60005ad78 to 0x60005ad90 ( 24 B ) in 3300 ns
DEBUG: allocated [an Integer] 5 from 0x60005ad90 to 0x60005ada8 ( 24 B ) in 2100 ns
DEBUG: allocated nil from 0x60005ada8 to 0x60005adb8 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( 5 nil ) from 0x60005adb8 to 0x60005add8 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( - ( 5 nil ) ) from 0x60005add8 to 0x60005adf8 ( 32 B ) in 1200 ns
DEBUG: allocated [an Integer] -5 from 0x60005adf8 to 0x60005ae10 ( 24 B ) in 1600 ns
-5
> DEBUG: allocated [a Symbol] - from 0x60005ae10 to 0x60005ae28 ( 24 B ) in 1600 ns
DEBUG: allocated [an Integer] 30 from 0x60005ae28 to 0x60005ae40 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 10 from 0x60005ae40 to 0x60005ae58 ( 24 B ) in 800 ns
DEBUG: allocated [an Integer] 10 from 0x60005ae58 to 0x60005ae70 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 10 from 0x60005ae70 to 0x60005ae88 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005ae88 to 0x60005ae98 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( 10 nil ) from 0x60005ae98 to 0x60005aeb8 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 10 ( 10 nil ) ) from 0x60005aeb8 to 0x60005aed8 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 10 ( 10 ( 10 nil ) ) ) from 0x60005aed8 to 0x60005aef8 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( 30 ( 10 ( 10 ( 10 nil ) ) ) ) from 0x60005aef8 to 0x60005af18 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( - ( 30 ( 10 ( 10 ( 10 nil ) ) ) ) ) from 0x60005af18 to 0x60005af38 ( 32 B ) in 1200 ns
DEBUG: allocated [an Integer] 0 from 0x60005af38 to 0x60005af50 ( 24 B ) in 1200 ns
0
> DEBUG: allocated [a Symbol] * from 0x60005af50 to 0x60005af68 ( 24 B ) in 2900 ns
DEBUG: allocated nil from 0x60005af68 to 0x60005af78 ( 16 B ) in 1600 ns
DEBUG: allocated [a Const] ( * nil ) from 0x60005af78 to 0x60005af98 ( 32 B ) in 2400 ns
DEBUG: allocated [an Integer] 1 from 0x60005af98 to 0x60005afb0 ( 24 B ) in 2000 ns
1
> DEBUG: allocated [a Symbol] * from 0x60005afb0 to 0x60005afc8 ( 24 B ) in 2900 ns
DEBUG: allocated [an Integer] 6 from 0x60005afc8 to 0x60005afe0 ( 24 B ) in 2100 ns
DEBUG: allocated nil from 0x60005afe0 to 0x60005aff0 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 6 nil ) from 0x60005aff0 to 0x60005b010 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( * ( 6 nil ) ) from 0x60005b010 to 0x60005b030 ( 32 B ) in 1300 ns
DEBUG: allocated [an Integer] 6 from 0x60005b030 to 0x60005b048 ( 24 B ) in 1300 ns
6
> DEBUG: allocated [a Symbol] * from 0x60005b048 to 0x60005b060 ( 24 B ) in 1600 ns
DEBUG: allocated [an Integer] 2 from 0x60005b060 to 0x60005b078 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 2 from 0x60005b078 to 0x60005b090 ( 24 B ) in 2000 ns
DEBUG: allocated [an Integer] 2 from 0x60005b090 to 0x60005b0a8 ( 24 B ) in 2100 ns
DEBUG: allocated [an Integer] 2 from 0x60005b0a8 to 0x60005b0c0 ( 24 B ) in 2400 ns
DEBUG: allocated nil from 0x60005b0c0 to 0x60005b0d0 ( 16 B ) in 2500 ns
DEBUG: allocated [a Const] ( 2 nil ) from 0x60005b0d0 to 0x60005b0f0 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( 2 ( 2 nil ) ) from 0x60005b0f0 to 0x60005b110 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 2 ( 2 ( 2 nil ) ) ) from 0x60005b110 to 0x60005b130 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 2 ( 2 ( 2 ( 2 nil ) ) ) ) from 0x60005b130 to 0x60005b150 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( * ( 2 ( 2 ( 2 ( 2 nil ) ) ) ) ) from 0x60005b150 to 0x60005b170 ( 32 B ) in 1200 ns
DEBUG: allocated [an Integer] 16 from 0x60005b170 to 0x60005b188 ( 24 B ) in 1300 ns
16
> DEBUG: allocated [a Symbol] = from 0x60005b188 to 0x60005b1a0 ( 24 B ) in 1700 ns
DEBUG: allocated [an Integer] 1 from 0x60005b1a0 to 0x60005b1b8 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b1b8 to 0x60005b1c8 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 1 nil ) from 0x60005b1c8 to 0x60005b1e8 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( = ( 1 nil ) ) from 0x60005b1e8 to 0x60005b208 ( 32 B ) in 1700 ns
= expects exactly 2 argumentsDEBUG: allocated [an Object]  from 0x60005b208 to 0x60005b218 ( 16 B ) in 1200 ns

> DEBUG: allocated [a Symbol] = from 0x60005b218 to 0x60005b230 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 10 from 0x60005b230 to 0x60005b248 ( 24 B ) in 1300 ns
DEBUG: allocated [an Integer] 10 from 0x60005b248 to 0x60005b260 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b260 to 0x60005b270 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( 10 nil ) from 0x60005b270 to 0x60005b290 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 10 ( 10 nil ) ) from 0x60005b290 to 0x60005b2b0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( = ( 10 ( 10 nil ) ) ) from 0x60005b2b0 to 0x60005b2d0 ( 32 B ) in 1600 ns
DEBUG: allocated [a Boolean] #t from 0x60005b2d0 to 0x60005b2e0 ( 16 B ) in 1200 ns
#t
> DEBUG: allocated [a Symbol] = from 0x60005b2e0 to 0x60005b2f8 ( 24 B ) in 1700 ns
DEBUG: allocated [an Integer] 5 from 0x60005b2f8 to 0x60005b310 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 2 from 0x60005b310 to 0x60005b328 ( 24 B ) in 1300 ns
DEBUG: allocated nil from 0x60005b328 to 0x60005b338 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 2 nil ) from 0x60005b338 to 0x60005b358 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 5 ( 2 nil ) ) from 0x60005b358 to 0x60005b378 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( = ( 5 ( 2 nil ) ) ) from 0x60005b378 to 0x60005b398 ( 32 B ) in 1300 ns
DEBUG: allocated [a Boolean] #f from 0x60005b398 to 0x60005b3a8 ( 16 B ) in 1300 ns
#f
> DEBUG: allocated [a Symbol] = from 0x60005b3a8 to 0x60005b3c0 ( 24 B ) in 1600 ns
DEBUG: allocated [an Integer] 2 from 0x60005b3c0 to 0x60005b3d8 ( 24 B ) in 1300 ns
DEBUG: allocated [an Integer] 3 from 0x60005b3d8 to 0x60005b3f0 ( 24 B ) in 1300 ns
DEBUG: allocated [an Integer] 5 from 0x60005b3f0 to 0x60005b408 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b408 to 0x60005b418 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 5 nil ) from 0x60005b418 to 0x60005b438 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 3 ( 5 nil ) ) from 0x60005b438 to 0x60005b458 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 2 ( 3 ( 5 nil ) ) ) from 0x60005b458 to 0x60005b478 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( = ( 2 ( 3 ( 5 nil ) ) ) ) from 0x60005b478 to 0x60005b498 ( 32 B ) in 1300 ns
= expects exactly 2 argumentsDEBUG: allocated [an Object]  from 0x60005b498 to 0x60005b4a8 ( 16 B ) in 1300 ns

> DEBUG: allocated [a Symbol] < from 0x60005b4a8 to 0x60005b4c0 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 4 from 0x60005b4c0 to 0x60005b4d8 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b4d8 to 0x60005b4e8 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 4 nil ) from 0x60005b4e8 to 0x60005b508 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( < ( 4 nil ) ) from 0x60005b508 to 0x60005b528 ( 32 B ) in 1200 ns
< expects exactly 2 argumentsDEBUG: allocated [an Object]  from 0x60005b528 to 0x60005b538 ( 16 B ) in 800 ns

> DEBUG: allocated [a Symbol] < from 0x60005b538 to 0x60005b550 ( 24 B ) in 1700 ns
DEBUG: allocated [an Integer] 2 from 0x60005b550 to 0x60005b568 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 3 from 0x60005b568 to 0x60005b580 ( 24 B ) in 1300 ns
DEBUG: allocated nil from 0x60005b580 to 0x60005b590 ( 16 B ) in 1600 ns
DEBUG: allocated [a Const] ( 3 nil ) from 0x60005b590 to 0x60005b5b0 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 2 ( 3 nil ) ) from 0x60005b5b0 to 0x60005b5d0 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( < ( 2 ( 3 nil ) ) ) from 0x60005b5d0 to 0x60005b5f0 ( 32 B ) in 1300 ns
DEBUG: allocated [a Boolean] #t from 0x60005b5f0 to 0x60005b600 ( 16 B ) in 900 ns
#t
> DEBUG: allocated [a Symbol] < from 0x60005b600 to 0x60005b618 ( 24 B ) in 1700 ns
DEBUG: allocated [an Integer] 2 from 0x60005b618 to 0x60005b630 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 3 from 0x60005b630 to 0x60005b648 ( 24 B ) in 800 ns
DEBUG: allocated [an Integer] 5 from 0x60005b648 to 0x60005b660 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b660 to 0x60005b670 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 5 nil ) from 0x60005b670 to 0x60005b690 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 3 ( 5 nil ) ) from 0x60005b690 to 0x60005b6b0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 2 ( 3 ( 5 nil ) ) ) from 0x60005b6b0 to 0x60005b6d0 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( < ( 2 ( 3 ( 5 nil ) ) ) ) from 0x60005b6d0 to 0x60005b6f0 ( 32 B ) in 1200 ns
< expects exactly 2 argumentsDEBUG: allocated [an Object]  from 0x60005b6f0 to 0x60005b700 ( 16 B ) in 1700 ns

> DEBUG: allocated [a Symbol] > from 0x60005b700 to 0x60005b718 ( 24 B ) in 3300 ns
DEBUG: allocated [an Integer] 4 from 0x60005b718 to 0x60005b730 ( 24 B ) in 2400 ns
DEBUG: allocated nil from 0x60005b730 to 0x60005b740 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( 4 nil ) from 0x60005b740 to 0x60005b760 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( > ( 4 nil ) ) from 0x60005b760 to 0x60005b780 ( 32 B ) in 2000 ns
> expects exactly 2 argumentsDEBUG: allocated [an Object]  from 0x60005b780 to 0x60005b790 ( 16 B ) in 1600 ns

> DEBUG: allocated [a Symbol] > from 0x60005b790 to 0x60005b7a8 ( 24 B ) in 2900 ns
DEBUG: allocated [an Integer] 2 from 0x60005b7a8 to 0x60005b7c0 ( 24 B ) in 1700 ns
DEBUG: allocated [an Integer] 3 from 0x60005b7c0 to 0x60005b7d8 ( 24 B ) in 1700 ns
DEBUG: allocated nil from 0x60005b7d8 to 0x60005b7e8 ( 16 B ) in 1600 ns
DEBUG: allocated [a Const] ( 3 nil ) from 0x60005b7e8 to 0x60005b808 ( 32 B ) in 1700 ns
DEBUG: allocated [a Const] ( 2 ( 3 nil ) ) from 0x60005b808 to 0x60005b828 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( > ( 2 ( 3 nil ) ) ) from 0x60005b828 to 0x60005b848 ( 32 B ) in 2000 ns
DEBUG: allocated [a Boolean] #f from 0x60005b848 to 0x60005b858 ( 16 B ) in 1700 ns
#f
> DEBUG: allocated [a Symbol] > from 0x60005b858 to 0x60005b870 ( 24 B ) in 2400 ns
DEBUG: allocated [an Integer] 2 from 0x60005b870 to 0x60005b888 ( 24 B ) in 2000 ns
DEBUG: allocated [an Integer] 3 from 0x60005b888 to 0x60005b8a0 ( 24 B ) in 2000 ns
DEBUG: allocated [an Integer] 5 from 0x60005b8a0 to 0x60005b8b8 ( 24 B ) in 2500 ns
DEBUG: allocated nil from 0x60005b8b8 to 0x60005b8c8 ( 16 B ) in 2100 ns
DEBUG: allocated [a Const] ( 5 nil ) from 0x60005b8c8 to 0x60005b8e8 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( 3 ( 5 nil ) ) from 0x60005b8e8 to 0x60005b908 ( 32 B ) in 1700 ns
DEBUG: allocated [a Const] ( 2 ( 3 ( 5 nil ) ) ) from 0x60005b908 to 0x60005b928 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( > ( 2 ( 3 ( 5 nil ) ) ) ) from 0x60005b928 to 0x60005b948 ( 32 B ) in 1700 ns
> expects exactly 2 argumentsDEBUG: allocated [an Object]  from 0x60005b948 to 0x60005b958 ( 16 B ) in 2000 ns

> DEBUG: allocated [a Symbol] if from 0x60005b958 to 0x60005b970 ( 24 B ) in 2000 ns
DEBUG: collecting garbage to free 24 B
DEBUG:   freed [a Symbol] + from 0x60005aa78 to 0x60005aa90 ( 24 B )
DEBUG:   freed nil from 0x60005aa90 to 0x60005aaa0 ( 16 B )
DEBUG:   freed [a Const] ( + nil ) from 0x60005aaa0 to 0x60005aac0 ( 32 B )
DEBUG:   freed [an Integer] 0 from 0x60005aac0 to 0x60005aad8 ( 24 B )
DEBUG:   freed [a Symbol] + from 0x60005aad8 to 0x60005aaf0 ( 24 B )
DEBUG:   freed [an Integer] 1 from 0x60005aaf0 to 0x60005ab08 ( 24 B )
DEBUG:   freed [an Integer] 1 from 0x60005ab08 to 0x60005ab20 ( 24 B )
DEBUG:   freed nil from 0x60005ab20 to 0x60005ab30 ( 16 B )
DEBUG:   freed [a Const] ( 1 nil ) from 0x60005ab30 to 0x60005ab50 ( 32 B )
DEBUG:   freed [a Const] ( 1 ( 1 nil ) ) from 0x60005ab50 to 0x60005ab70 ( 32 B )
DEBUG:   freed [a Const] ( + ( 1 ( 1 nil ) ) ) from 0x60005ab70 to 0x60005ab90 ( 32 B )
DEBUG:   freed [an Integer] 2 from 0x60005ab90 to 0x60005aba8 ( 24 B )
DEBUG:   freed [a Symbol] + from 0x60005aba8 to 0x60005abc0 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005abc0 to 0x60005abd8 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005abd8 to 0x60005abf0 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005abf0 to 0x60005ac08 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005ac08 to 0x60005ac20 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005ac20 to 0x60005ac38 ( 24 B )
DEBUG:   freed nil from 0x60005ac38 to 0x60005ac48 ( 16 B )
DEBUG:   freed [a Const] ( 5 nil ) from 0x60005ac48 to 0x60005ac68 ( 32 B )
DEBUG:   freed [a Const] ( 5 ( 5 nil ) ) from 0x60005ac68 to 0x60005ac88 ( 32 B )
DEBUG:   freed [a Const] ( 5 ( 5 ( 5 nil ) ) ) from 0x60005ac88 to 0x60005aca8 ( 32 B )
DEBUG:   freed [a Const] ( 5 ( 5 ( 5 ( 5 nil ) ) ) ) from 0x60005aca8 to 0x60005acc8 ( 32 B )
DEBUG:   freed [a Const] ( 5 ( 5 ( 5 ( 5 ( 5 nil ) ) ) ) ) from 0x60005acc8 to 0x60005ace8 ( 32 B )
DEBUG:   freed [a Const] ( + ( 5 ( 5 ( 5 ( 5 ( 5 nil ) ) ) ) ) ) from 0x60005ace8 to 0x60005ad08 ( 32 B )
DEBUG:   freed [an Integer] 25 from 0x60005ad08 to 0x60005ad20 ( 24 B )
DEBUG:   freed [a Symbol] - from 0x60005ad20 to 0x60005ad38 ( 24 B )
DEBUG:   freed nil from 0x60005ad38 to 0x60005ad48 ( 16 B )
DEBUG:   freed [a Const] ( - nil ) from 0x60005ad48 to 0x60005ad68 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005ad68 to 0x60005ad78 ( 16 B )
DEBUG:   freed [a Symbol] - from 0x60005ad78 to 0x60005ad90 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005ad90 to 0x60005ada8 ( 24 B )
DEBUG:   freed nil from 0x60005ada8 to 0x60005adb8 ( 16 B )
DEBUG:   freed [a Const] ( 5 nil ) from 0x60005adb8 to 0x60005add8 ( 32 B )
DEBUG:   freed [a Const] ( - ( 5 nil ) ) from 0x60005add8 to 0x60005adf8 ( 32 B )
DEBUG:   freed [an Integer] -5 from 0x60005adf8 to 0x60005ae10 ( 24 B )
DEBUG:   freed [a Symbol] - from 0x60005ae10 to 0x60005ae28 ( 24 B )
DEBUG:   freed [an Integer] 30 from 0x60005ae28 to 0x60005ae40 ( 24 B )
DEBUG:   freed [an Integer] 10 from 0x60005ae40 to 0x60005ae58 ( 24 B )
DEBUG:   freed [an Integer] 10 from 0x60005ae58 to 0x60005ae70 ( 24 B )
DEBUG:   freed [an Integer] 10 from 0x60005ae70 to 0x60005ae88 ( 24 B )
DEBUG:   freed nil from 0x60005ae88 to 0x60005ae98 ( 16 B )
DEBUG:   freed [a Const] ( 10 nil ) from 0x60005ae98 to 0x60005aeb8 ( 32 B )
DEBUG:   freed [a Const] ( 10 ( 10 nil ) ) from 0x60005aeb8 to 0x60005aed8 ( 32 B )
DEBUG:   freed [a Const] ( 10 ( 10 ( 10 nil ) ) ) from 0x60005aed8 to 0x60005aef8 ( 32 B )
DEBUG:   freed [a Const] ( 30 ( 10 ( 10 ( 10 nil ) ) ) ) from 0x60005aef8 to 0x60005af18 ( 32 B )
DEBUG:   freed [a Const] ( - ( 30 ( 10 ( 10 ( 10 nil ) ) ) ) ) from 0x60005af18 to 0x60005af38 ( 32 B )
DEBUG:   freed [an Integer] 0 from 0x60005af38 to 0x60005af50 ( 24 B )
DEBUG:   freed [a Symbol] * from 0x60005af50 to 0x60005af68 ( 24 B )
DEBUG:   freed nil from 0x60005af68 to 0x60005af78 ( 16 B )
DEBUG:   freed [a Const] ( * nil ) from 0x60005af78 to 0x60005af98 ( 32 B )
DEBUG:   freed [an Integer] 1 from 0x60005af98 to 0x60005afb0 ( 24 B )
DEBUG:   freed [a Symbol] * from 0x60005afb0 to 0x60005afc8 ( 24 B )
DEBUG:   freed [an Integer] 6 from 0x60005afc8 to 0x60005afe0 ( 24 B )
DEBUG:   freed nil from 0x60005afe0 to 0x60005aff0 ( 16 B )
DEBUG:   freed [a Const] ( 6 nil ) from 0x60005aff0 to 0x60005b010 ( 32 B )
DEBUG:   freed [a Const] ( * ( 6 nil ) ) from 0x60005b010 to 0x60005b030 ( 32 B )
DEBUG:   freed [an Integer] 6 from 0x60005b030 to 0x60005b048 ( 24 B )
DEBUG:   freed [a Symbol] * from 0x60005b048 to 0x60005b060 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b060 to 0x60005b078 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b078 to 0x60005b090 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b090 to 0x60005b0a8 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b0a8 to 0x60005b0c0 ( 24 B )
DEBUG:   freed nil from 0x60005b0c0 to 0x60005b0d0 ( 16 B )
DEBUG:   freed [a Const] ( 2 nil ) from 0x60005b0d0 to 0x60005b0f0 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 2 nil ) ) from 0x60005b0f0 to 0x60005b110 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 2 ( 2 nil ) ) ) from 0x60005b110 to 0x60005b130 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 2 ( 2 ( 2 nil ) ) ) ) from 0x60005b130 to 0x60005b150 ( 32 B )
DEBUG:   freed [a Const] ( * ( 2 ( 2 ( 2 ( 2 nil ) ) ) ) ) from 0x60005b150 to 0x60005b170 ( 32 B )
DEBUG:   freed [an Integer] 16 from 0x60005b170 to 0x60005b188 ( 24 B )
DEBUG:   freed [a Symbol] = from 0x60005b188 to 0x60005b1a0 ( 24 B )
DEBUG:   freed [an Integer] 1 from 0x60005b1a0 to 0x60005b1b8 ( 24 B )
DEBUG:   freed nil from 0x60005b1b8 to 0x60005b1c8 ( 16 B )
DEBUG:   freed [a Const] ( 1 nil ) from 0x60005b1c8 to 0x60005b1e8 ( 32 B )
DEBUG:   freed [a Const] ( = ( 1 nil ) ) from 0x60005b1e8 to 0x60005b208 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b208 to 0x60005b218 ( 16 B )
DEBUG:   freed [a Symbol] = from 0x60005b218 to 0x60005b230 ( 24 B )
DEBUG:   freed [an Integer] 10 from 0x60005b230 to 0x60005b248 ( 24 B )
DEBUG:   freed [an Integer] 10 from 0x60005b248 to 0x60005b260 ( 24 B )
DEBUG:   freed nil from 0x60005b260 to 0x60005b270 ( 16 B )
DEBUG:   freed [a Const] ( 10 nil ) from 0x60005b270 to 0x60005b290 ( 32 B )
DEBUG:   freed [a Const] ( 10 ( 10 nil ) ) from 0x60005b290 to 0x60005b2b0 ( 32 B )
DEBUG:   freed [a Const] ( = ( 10 ( 10 nil ) ) ) from 0x60005b2b0 to 0x60005b2d0 ( 32 B )
DEBUG:   freed [a Boolean] #t from 0x60005b2d0 to 0x60005b2e0 ( 16 B )
DEBUG:   freed [a Symbol] = from 0x60005b2e0 to 0x60005b2f8 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005b2f8 to 0x60005b310 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b310 to 0x60005b328 ( 24 B )
DEBUG:   freed nil from 0x60005b328 to 0x60005b338 ( 16 B )
DEBUG:   freed [a Const] ( 2 nil ) from 0x60005b338 to 0x60005b358 ( 32 B )
DEBUG:   freed [a Const] ( 5 ( 2 nil ) ) from 0x60005b358 to 0x60005b378 ( 32 B )
DEBUG:   freed [a Const] ( = ( 5 ( 2 nil ) ) ) from 0x60005b378 to 0x60005b398 ( 32 B )
DEBUG:   freed [a Boolean] #f from 0x60005b398 to 0x60005b3a8 ( 16 B )
DEBUG:   freed [a Symbol] = from 0x60005b3a8 to 0x60005b3c0 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b3c0 to 0x60005b3d8 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005b3d8 to 0x60005b3f0 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005b3f0 to 0x60005b408 ( 24 B )
DEBUG:   freed nil from 0x60005b408 to 0x60005b418 ( 16 B )
DEBUG:   freed [a Const] ( 5 nil ) from 0x60005b418 to 0x60005b438 ( 32 B )
DEBUG:   freed [a Const] ( 3 ( 5 nil ) ) from 0x60005b438 to 0x60005b458 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 3 ( 5 nil ) ) ) from 0x60005b458 to 0x60005b478 ( 32 B )
DEBUG:   freed [a Const] ( = ( 2 ( 3 ( 5 nil ) ) ) ) from 0x60005b478 to 0x60005b498 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b498 to 0x60005b4a8 ( 16 B )
DEBUG:   freed [a Symbol] < from 0x60005b4a8 to 0x60005b4c0 ( 24 B )
DEBUG:   freed [an Integer] 4 from 0x60005b4c0 to 0x60005b4d8 ( 24 B )
DEBUG:   freed nil from 0x60005b4d8 to 0x60005b4e8 ( 16 B )
DEBUG:   freed [a Const] ( 4 nil ) from 0x60005b4e8 to 0x60005b508 ( 32 B )
DEBUG:   freed [a Const] ( < ( 4 nil ) ) from 0x60005b508 to 0x60005b528 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b528 to 0x60005b538 ( 16 B )
DEBUG:   freed [a Symbol] < from 0x60005b538 to 0x60005b550 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b550 to 0x60005b568 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005b568 to 0x60005b580 ( 24 B )
DEBUG:   freed nil from 0x60005b580 to 0x60005b590 ( 16 B )
DEBUG:   freed [a Const] ( 3 nil ) from 0x60005b590 to 0x60005b5b0 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 3 nil ) ) from 0x60005b5b0 to 0x60005b5d0 ( 32 B )
DEBUG:   freed [a Const] ( < ( 2 ( 3 nil ) ) ) from 0x60005b5d0 to 0x60005b5f0 ( 32 B )
DEBUG:   freed [a Boolean] #t from 0x60005b5f0 to 0x60005b600 ( 16 B )
DEBUG:   freed [a Symbol] < from 0x60005b600 to 0x60005b618 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b618 to 0x60005b630 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005b630 to 0x60005b648 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005b648 to 0x60005b660 ( 24 B )
DEBUG:   freed nil from 0x60005b660 to 0x60005b670 ( 16 B )
DEBUG:   freed [a Const] ( 5 nil ) from 0x60005b670 to 0x60005b690 ( 32 B )
DEBUG:   freed [a Const] ( 3 ( 5 nil ) ) from 0x60005b690 to 0x60005b6b0 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 3 ( 5 nil ) ) ) from 0x60005b6b0 to 0x60005b6d0 ( 32 B )
DEBUG:   freed [a Const] ( < ( 2 ( 3 ( 5 nil ) ) ) ) from 0x60005b6d0 to 0x60005b6f0 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b6f0 to 0x60005b700 ( 16 B )
DEBUG:   freed [a Symbol] > from 0x60005b700 to 0x60005b718 ( 24 B )
DEBUG:   freed [an Integer] 4 from 0x60005b718 to 0x60005b730 ( 24 B )
DEBUG:   freed nil from 0x60005b730 to 0x60005b740 ( 16 B )
DEBUG:   freed [a Const] ( 4 nil ) from 0x60005b740 to 0x60005b760 ( 32 B )
DEBUG:   freed [a Const] ( > ( 4 nil ) ) from 0x60005b760 to 0x60005b780 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b780 to 0x60005b790 ( 16 B )
DEBUG:   freed [a Symbol] > from 0x60005b790 to 0x60005b7a8 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b7a8 to 0x60005b7c0 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005b7c0 to 0x60005b7d8 ( 24 B )
DEBUG:   freed nil from 0x60005b7d8 to 0x60005b7e8 ( 16 B )
DEBUG:   freed [a Const] ( 3 nil ) from 0x60005b7e8 to 0x60005b808 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 3 nil ) ) from 0x60005b808 to 0x60005b828 ( 32 B )
DEBUG:   freed [a Const] ( > ( 2 ( 3 nil ) ) ) from 0x60005b828 to 0x60005b848 ( 32 B )
DEBUG:   freed [a Boolean] #f from 0x60005b848 to 0x60005b858 ( 16 B )
DEBUG:   freed [a Symbol] > from 0x60005b858 to 0x60005b870 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b870 to 0x60005b888 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005b888 to 0x60005b8a0 ( 24 B )
DEBUG:   freed [an Integer] 5 from 0x60005b8a0 to 0x60005b8b8 ( 24 B )
DEBUG:   freed nil from 0x60005b8b8 to 0x60005b8c8 ( 16 B )
DEBUG:   freed [a Const] ( 5 nil ) from 0x60005b8c8 to 0x60005b8e8 ( 32 B )
DEBUG:   freed [a Const] ( 3 ( 5 nil ) ) from 0x60005b8e8 to 0x60005b908 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 3 ( 5 nil ) ) ) from 0x60005b908 to 0x60005b928 ( 32 B )
DEBUG:   freed [a Const] ( > ( 2 ( 3 ( 5 nil ) ) ) ) from 0x60005b928 to 0x60005b948 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b948 to 0x60005b958 ( 16 B )
DEBUG: garbage collected - freed enough memory
DEBUG: allocated [a Symbol] < from 0x60005aa78 to 0x60005aa90 ( 24 B ) in 986000 ns
DEBUG: allocated [an Integer] 2 from 0x60005aa90 to 0x60005aaa8 ( 24 B ) in 1600 ns
DEBUG: allocated [an Integer] 3 from 0x60005aaa8 to 0x60005aac0 ( 24 B ) in 1300 ns
DEBUG: allocated nil from 0x60005aac0 to 0x60005aad0 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 3 nil ) from 0x60005aad0 to 0x60005aaf0 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( 2 ( 3 nil ) ) from 0x60005aaf0 to 0x60005ab10 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( < ( 2 ( 3 nil ) ) ) from 0x60005ab10 to 0x60005ab30 ( 32 B ) in 1200 ns
DEBUG: allocated [a Symbol] + from 0x60005ab30 to 0x60005ab48 ( 24 B ) in 1600 ns
DEBUG: allocated [an Integer] 1 from 0x60005ab48 to 0x60005ab60 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 0 from 0x60005ab60 to 0x60005ab78 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005ab78 to 0x60005ab88 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( 0 nil ) from 0x60005ab88 to 0x60005aba8 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( 1 ( 0 nil ) ) from 0x60005aba8 to 0x60005abc8 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( + ( 1 ( 0 nil ) ) ) from 0x60005abc8 to 0x60005abe8 ( 32 B ) in 1200 ns
DEBUG: allocated [a Symbol] + from 0x60005abe8 to 0x60005ac00 ( 24 B ) in 1600 ns
DEBUG: allocated [an Integer] 0 from 0x60005ac00 to 0x60005ac18 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 0 from 0x60005ac18 to 0x60005ac30 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005ac30 to 0x60005ac40 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 0 nil ) from 0x60005ac40 to 0x60005ac60 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 0 ( 0 nil ) ) from 0x60005ac60 to 0x60005ac80 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( + ( 0 ( 0 nil ) ) ) from 0x60005ac80 to 0x60005aca0 ( 32 B ) in 1700 ns
DEBUG: allocated nil from 0x60005aca0 to 0x60005acb0 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( + ( 0 ( 0 nil ) ) ) nil ) from 0x60005acb0 to 0x60005acd0 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) from 0x60005acd0 to 0x60005acf0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( < ( 2 ( 3 nil ) ) ) ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) ) from 0x60005acf0 to 0x60005ad10 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( if ( ( < ( 2 ( 3 nil ) ) ) ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) ) ) from 0x60005ad10 to 0x60005ad30 ( 32 B ) in 1300 ns
DEBUG: allocated [a Boolean] #t from 0x60005ad30 to 0x60005ad40 ( 16 B ) in 1300 ns
DEBUG: allocated [an Integer] 1 from 0x60005ad40 to 0x60005ad58 ( 24 B ) in 1200 ns
1
> DEBUG: allocated [a Symbol] if from 0x60005ad58 to 0x60005ad70 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] < from 0x60005ad70 to 0x60005ad88 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 3 from 0x60005ad88 to 0x60005ada0 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 2 from 0x60005ada0 to 0x60005adb8 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005adb8 to 0x60005adc8 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 2 nil ) from 0x60005adc8 to 0x60005ade8 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 3 ( 2 nil ) ) from 0x60005ade8 to 0x60005ae08 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( < ( 3 ( 2 nil ) ) ) from 0x60005ae08 to 0x60005ae28 ( 32 B ) in 1300 ns
DEBUG: allocated [a Symbol] + from 0x60005ae28 to 0x60005ae40 ( 24 B ) in 1300 ns
DEBUG: allocated [an Integer] 1 from 0x60005ae40 to 0x60005ae58 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 0 from 0x60005ae58 to 0x60005ae70 ( 24 B ) in 1300 ns
DEBUG: allocated nil from 0x60005ae70 to 0x60005ae80 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 0 nil ) from 0x60005ae80 to 0x60005aea0 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( 1 ( 0 nil ) ) from 0x60005aea0 to 0x60005aec0 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( + ( 1 ( 0 nil ) ) ) from 0x60005aec0 to 0x60005aee0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Symbol] + from 0x60005aee0 to 0x60005aef8 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 0 from 0x60005aef8 to 0x60005af10 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 0 from 0x60005af10 to 0x60005af28 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005af28 to 0x60005af38 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 0 nil ) from 0x60005af38 to 0x60005af58 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( 0 ( 0 nil ) ) from 0x60005af58 to 0x60005af78 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( + ( 0 ( 0 nil ) ) ) from 0x60005af78 to 0x60005af98 ( 32 B ) in 1200 ns
DEBUG: allocated nil from 0x60005af98 to 0x60005afa8 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( ( + ( 0 ( 0 nil ) ) ) nil ) from 0x60005afa8 to 0x60005afc8 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) from 0x60005afc8 to 0x60005afe8 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( ( < ( 3 ( 2 nil ) ) ) ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) ) from 0x60005afe8 to 0x60005b008 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( if ( ( < ( 3 ( 2 nil ) ) ) ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) ) ) from 0x60005b008 to 0x60005b028 ( 32 B ) in 1600 ns
DEBUG: allocated [a Boolean] #f from 0x60005b028 to 0x60005b038 ( 16 B ) in 1300 ns
DEBUG: allocated [an Integer] 0 from 0x60005b038 to 0x60005b050 ( 24 B ) in 1200 ns
0
> DEBUG: allocated [a Symbol] define from 0x60005b050 to 0x60005b068 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] not from 0x60005b068 to 0x60005b080 ( 24 B ) in 1200 ns
DEBUG: allocated [a Symbol] lambda from 0x60005b080 to 0x60005b098 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] bool from 0x60005b098 to 0x60005b0b0 ( 24 B ) in 1600 ns
DEBUG: allocated nil from 0x60005b0b0 to 0x60005b0c0 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( bool nil ) from 0x60005b0c0 to 0x60005b0e0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Symbol] if from 0x60005b0e0 to 0x60005b0f8 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] bool from 0x60005b0f8 to 0x60005b110 ( 24 B ) in 1200 ns
DEBUG: allocated [a Boolean] #f from 0x60005b110 to 0x60005b120 ( 16 B ) in 1300 ns
DEBUG: allocated [a Boolean] #t from 0x60005b120 to 0x60005b130 ( 16 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b130 to 0x60005b140 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( #t nil ) from 0x60005b140 to 0x60005b160 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( #f ( #t nil ) ) from 0x60005b160 to 0x60005b180 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( bool ( #f ( #t nil ) ) ) from 0x60005b180 to 0x60005b1a0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( if ( bool ( #f ( #t nil ) ) ) ) from 0x60005b1a0 to 0x60005b1c0 ( 32 B ) in 4200 ns
DEBUG: allocated nil from 0x60005b1c0 to 0x60005b1d0 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) from 0x60005b1d0 to 0x60005b1f0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) from 0x60005b1f0 to 0x60005b210 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( lambda ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) ) from 0x60005b210 to 0x60005b230 ( 32 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b230 to 0x60005b240 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( lambda ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) ) nil ) from 0x60005b240 to 0x60005b260 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( not ( ( lambda ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) ) nil ) ) from 0x60005b260 to 0x60005b280 ( 32 B ) in 1700 ns
DEBUG: allocated [a Const] ( define ( not ( ( lambda ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) ) nil ) ) ) from 0x60005b280 to 0x60005b2a0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Void (scary, right?)] from 0x60005b2a0 to 0x60005b2c0 ( 32 B ) in 1300 ns
DEBUG: allocated [an Object]  from 0x60005b2c0 to 0x60005b2d0 ( 16 B ) in 1300 ns

> DEBUG: allocated [a Symbol] define from 0x60005b2d0 to 0x60005b2e8 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] and from 0x60005b2e8 to 0x60005b300 ( 24 B ) in 2400 ns
DEBUG: allocated [a Symbol] lambda from 0x60005b300 to 0x60005b318 ( 24 B ) in 1700 ns
DEBUG: allocated [a Symbol] a from 0x60005b318 to 0x60005b330 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] b from 0x60005b330 to 0x60005b348 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b348 to 0x60005b358 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( b nil ) from 0x60005b358 to 0x60005b378 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( a ( b nil ) ) from 0x60005b378 to 0x60005b398 ( 32 B ) in 1200 ns
DEBUG: allocated [a Symbol] if from 0x60005b398 to 0x60005b3b0 ( 24 B ) in 1700 ns
DEBUG: allocated [a Symbol] a from 0x60005b3b0 to 0x60005b3c8 ( 24 B ) in 1300 ns
DEBUG: allocated [a Symbol] b from 0x60005b3c8 to 0x60005b3e0 ( 24 B ) in 1200 ns
DEBUG: allocated [a Boolean] #f from 0x60005b3e0 to 0x60005b3f0 ( 16 B ) in 1300 ns
DEBUG: allocated nil from 0x60005b3f0 to 0x60005b400 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( #f nil ) from 0x60005b400 to 0x60005b420 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( b ( #f nil ) ) from 0x60005b420 to 0x60005b440 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( a ( b ( #f nil ) ) ) from 0x60005b440 to 0x60005b460 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( if ( a ( b ( #f nil ) ) ) ) from 0x60005b460 to 0x60005b480 ( 32 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b480 to 0x60005b490 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( ( if ( a ( b ( #f nil ) ) ) ) nil ) from 0x60005b490 to 0x60005b4b0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) from 0x60005b4b0 to 0x60005b4d0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( lambda ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) ) from 0x60005b4d0 to 0x60005b4f0 ( 32 B ) in 1300 ns
DEBUG: allocated nil from 0x60005b4f0 to 0x60005b500 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) ) nil ) from 0x60005b500 to 0x60005b520 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( and ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) ) nil ) ) from 0x60005b520 to 0x60005b540 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( define ( and ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) ) nil ) ) ) from 0x60005b540 to 0x60005b560 ( 32 B ) in 1600 ns
DEBUG: allocated [a Void (scary, right?)] from 0x60005b560 to 0x60005b580 ( 32 B ) in 1600 ns
DEBUG: allocated [an Object]  from 0x60005b580 to 0x60005b590 ( 16 B ) in 800 ns

> DEBUG: allocated [a Symbol] define from 0x60005b590 to 0x60005b5a8 ( 24 B ) in 1700 ns
DEBUG: allocated [a Symbol] or from 0x60005b5a8 to 0x60005b5c0 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] lambda from 0x60005b5c0 to 0x60005b5d8 ( 24 B ) in 1200 ns
DEBUG: allocated [a Symbol] a from 0x60005b5d8 to 0x60005b5f0 ( 24 B ) in 1300 ns
DEBUG: allocated [a Symbol] b from 0x60005b5f0 to 0x60005b608 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b608 to 0x60005b618 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( b nil ) from 0x60005b618 to 0x60005b638 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( a ( b nil ) ) from 0x60005b638 to 0x60005b658 ( 32 B ) in 1200 ns
DEBUG: allocated [a Symbol] if from 0x60005b658 to 0x60005b670 ( 24 B ) in 1200 ns
DEBUG: allocated [a Symbol] a from 0x60005b670 to 0x60005b688 ( 24 B ) in 1700 ns
DEBUG: allocated [a Boolean] #t from 0x60005b688 to 0x60005b698 ( 16 B ) in 1200 ns
DEBUG: allocated [a Symbol] b from 0x60005b698 to 0x60005b6b0 ( 24 B ) in 1600 ns
DEBUG: allocated nil from 0x60005b6b0 to 0x60005b6c0 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( b nil ) from 0x60005b6c0 to 0x60005b6e0 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( #t ( b nil ) ) from 0x60005b6e0 to 0x60005b700 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( a ( #t ( b nil ) ) ) from 0x60005b700 to 0x60005b720 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( if ( a ( #t ( b nil ) ) ) ) from 0x60005b720 to 0x60005b740 ( 32 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b740 to 0x60005b750 ( 16 B ) in 800 ns
DEBUG: allocated [a Const] ( ( if ( a ( #t ( b nil ) ) ) ) nil ) from 0x60005b750 to 0x60005b770 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) from 0x60005b770 to 0x60005b790 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( lambda ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) ) from 0x60005b790 to 0x60005b7b0 ( 32 B ) in 1300 ns
DEBUG: allocated nil from 0x60005b7b0 to 0x60005b7c0 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) ) nil ) from 0x60005b7c0 to 0x60005b7e0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( or ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) ) nil ) ) from 0x60005b7e0 to 0x60005b800 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( define ( or ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) ) nil ) ) ) from 0x60005b800 to 0x60005b820 ( 32 B ) in 1200 ns
DEBUG: allocated [a Void (scary, right?)] from 0x60005b820 to 0x60005b840 ( 32 B ) in 1200 ns
DEBUG: allocated [an Object]  from 0x60005b840 to 0x60005b850 ( 16 B ) in 1300 ns

> DEBUG: allocated [a Symbol] define from 0x60005b850 to 0x60005b868 ( 24 B ) in 1700 ns
DEBUG: allocated [a Symbol] square from 0x60005b868 to 0x60005b880 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] lambda from 0x60005b880 to 0x60005b898 ( 24 B ) in 1200 ns
DEBUG: allocated [a Symbol] n from 0x60005b898 to 0x60005b8b0 ( 24 B ) in 1700 ns
DEBUG: allocated nil from 0x60005b8b0 to 0x60005b8c0 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( n nil ) from 0x60005b8c0 to 0x60005b8e0 ( 32 B ) in 1200 ns
DEBUG: allocated [a Symbol] * from 0x60005b8e0 to 0x60005b8f8 ( 24 B ) in 1200 ns
DEBUG: allocated [a Symbol] n from 0x60005b8f8 to 0x60005b910 ( 24 B ) in 1700 ns
DEBUG: allocated [a Symbol] n from 0x60005b910 to 0x60005b928 ( 24 B ) in 1600 ns
DEBUG: allocated nil from 0x60005b928 to 0x60005b938 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( n nil ) from 0x60005b938 to 0x60005b958 ( 32 B ) in 800 ns
DEBUG: collecting garbage to free 32 B
DEBUG:   freed [a Symbol] < from 0x60005aa78 to 0x60005aa90 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005aa90 to 0x60005aaa8 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005aaa8 to 0x60005aac0 ( 24 B )
DEBUG:   freed nil from 0x60005aac0 to 0x60005aad0 ( 16 B )
DEBUG:   freed [a Const] ( 3 nil ) from 0x60005aad0 to 0x60005aaf0 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 3 nil ) ) from 0x60005aaf0 to 0x60005ab10 ( 32 B )
DEBUG:   freed [a Const] ( < ( 2 ( 3 nil ) ) ) from 0x60005ab10 to 0x60005ab30 ( 32 B )
DEBUG:   freed [a Symbol] + from 0x60005ab30 to 0x60005ab48 ( 24 B )
DEBUG:   freed [an Integer] 1 from 0x60005ab48 to 0x60005ab60 ( 24 B )
DEBUG:   freed [an Integer] 0 from 0x60005ab60 to 0x60005ab78 ( 24 B )
DEBUG:   freed nil from 0x60005ab78 to 0x60005ab88 ( 16 B )
DEBUG:   freed [a Const] ( 0 nil ) from 0x60005ab88 to 0x60005aba8 ( 32 B )
DEBUG:   freed [a Const] ( 1 ( 0 nil ) ) from 0x60005aba8 to 0x60005abc8 ( 32 B )
DEBUG:   freed [a Const] ( + ( 1 ( 0 nil ) ) ) from 0x60005abc8 to 0x60005abe8 ( 32 B )
DEBUG:   freed [a Symbol] + from 0x60005abe8 to 0x60005ac00 ( 24 B )
DEBUG:   freed [an Integer] 0 from 0x60005ac00 to 0x60005ac18 ( 24 B )
DEBUG:   freed [an Integer] 0 from 0x60005ac18 to 0x60005ac30 ( 24 B )
DEBUG:   freed nil from 0x60005ac30 to 0x60005ac40 ( 16 B )
DEBUG:   freed [a Const] ( 0 nil ) from 0x60005ac40 to 0x60005ac60 ( 32 B )
DEBUG:   freed [a Const] ( 0 ( 0 nil ) ) from 0x60005ac60 to 0x60005ac80 ( 32 B )
DEBUG:   freed [a Const] ( + ( 0 ( 0 nil ) ) ) from 0x60005ac80 to 0x60005aca0 ( 32 B )
DEBUG:   freed nil from 0x60005aca0 to 0x60005acb0 ( 16 B )
DEBUG:   freed [a Const] ( ( + ( 0 ( 0 nil ) ) ) nil ) from 0x60005acb0 to 0x60005acd0 ( 32 B )
DEBUG:   freed [a Const] ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) from 0x60005acd0 to 0x60005acf0 ( 32 B )
DEBUG:   freed [a Const] ( ( < ( 2 ( 3 nil ) ) ) ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) ) from 0x60005acf0 to 0x60005ad10 ( 32 B )
DEBUG:   freed [a Const] ( if ( ( < ( 2 ( 3 nil ) ) ) ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) ) ) from 0x60005ad10 to 0x60005ad30 ( 32 B )
DEBUG:   freed [a Boolean] #t from 0x60005ad30 to 0x60005ad40 ( 16 B )
DEBUG:   freed [an Integer] 1 from 0x60005ad40 to 0x60005ad58 ( 24 B )
DEBUG:   freed [a Symbol] if from 0x60005ad58 to 0x60005ad70 ( 24 B )
DEBUG:   freed [a Symbol] < from 0x60005ad70 to 0x60005ad88 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005ad88 to 0x60005ada0 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005ada0 to 0x60005adb8 ( 24 B )
DEBUG:   freed nil from 0x60005adb8 to 0x60005adc8 ( 16 B )
DEBUG:   freed [a Const] ( 2 nil ) from 0x60005adc8 to 0x60005ade8 ( 32 B )
DEBUG:   freed [a Const] ( 3 ( 2 nil ) ) from 0x60005ade8 to 0x60005ae08 ( 32 B )
DEBUG:   freed [a Const] ( < ( 3 ( 2 nil ) ) ) from 0x60005ae08 to 0x60005ae28 ( 32 B )
DEBUG:   freed [a Symbol] + from 0x60005ae28 to 0x60005ae40 ( 24 B )
DEBUG:   freed [an Integer] 1 from 0x60005ae40 to 0x60005ae58 ( 24 B )
DEBUG:   freed [an Integer] 0 from 0x60005ae58 to 0x60005ae70 ( 24 B )
DEBUG:   freed nil from 0x60005ae70 to 0x60005ae80 ( 16 B )
DEBUG:   freed [a Const] ( 0 nil ) from 0x60005ae80 to 0x60005aea0 ( 32 B )
DEBUG:   freed [a Const] ( 1 ( 0 nil ) ) from 0x60005aea0 to 0x60005aec0 ( 32 B )
DEBUG:   freed [a Const] ( + ( 1 ( 0 nil ) ) ) from 0x60005aec0 to 0x60005aee0 ( 32 B )
DEBUG:   freed [a Symbol] + from 0x60005aee0 to 0x60005aef8 ( 24 B )
DEBUG:   freed [an Integer] 0 from 0x60005aef8 to 0x60005af10 ( 24 B )
DEBUG:   freed [an Integer] 0 from 0x60005af10 to 0x60005af28 ( 24 B )
DEBUG:   freed nil from 0x60005af28 to 0x60005af38 ( 16 B )
DEBUG:   freed [a Const] ( 0 nil ) from 0x60005af38 to 0x60005af58 ( 32 B )
DEBUG:   freed [a Const] ( 0 ( 0 nil ) ) from 0x60005af58 to 0x60005af78 ( 32 B )
DEBUG:   freed [a Const] ( + ( 0 ( 0 nil ) ) ) from 0x60005af78 to 0x60005af98 ( 32 B )
DEBUG:   freed nil from 0x60005af98 to 0x60005afa8 ( 16 B )
DEBUG:   freed [a Const] ( ( + ( 0 ( 0 nil ) ) ) nil ) from 0x60005afa8 to 0x60005afc8 ( 32 B )
DEBUG:   freed [a Const] ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) from 0x60005afc8 to 0x60005afe8 ( 32 B )
DEBUG:   freed [a Const] ( ( < ( 3 ( 2 nil ) ) ) ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) ) from 0x60005afe8 to 0x60005b008 ( 32 B )
DEBUG:   freed [a Const] ( if ( ( < ( 3 ( 2 nil ) ) ) ( ( + ( 1 ( 0 nil ) ) ) ( ( + ( 0 ( 0 nil ) ) ) nil ) ) ) ) from 0x60005b008 to 0x60005b028 ( 32 B )
DEBUG:   freed [a Boolean] #f from 0x60005b028 to 0x60005b038 ( 16 B )
DEBUG:   freed [an Integer] 0 from 0x60005b038 to 0x60005b050 ( 24 B )
DEBUG:   freed [a Symbol] define from 0x60005b050 to 0x60005b068 ( 24 B )
DEBUG:   freed [a Symbol] not from 0x60005b068 to 0x60005b080 ( 24 B )
DEBUG:   freed [a Symbol] lambda from 0x60005b080 to 0x60005b098 ( 24 B )
DEBUG:   freed nil from 0x60005b1c0 to 0x60005b1d0 ( 16 B )
DEBUG:   freed [a Const] ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) from 0x60005b1d0 to 0x60005b1f0 ( 32 B )
DEBUG:   freed [a Const] ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) from 0x60005b1f0 to 0x60005b210 ( 32 B )
DEBUG:   freed [a Const] ( lambda ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) ) from 0x60005b210 to 0x60005b230 ( 32 B )
DEBUG:   freed nil from 0x60005b230 to 0x60005b240 ( 16 B )
DEBUG:   freed [a Const] ( ( lambda ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) ) nil ) from 0x60005b240 to 0x60005b260 ( 32 B )
DEBUG:   freed [a Const] ( not ( ( lambda ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) ) nil ) ) from 0x60005b260 to 0x60005b280 ( 32 B )
DEBUG:   freed [a Const] ( define ( not ( ( lambda ( ( bool nil ) ( ( if ( bool ( #f ( #t nil ) ) ) ) nil ) ) ) nil ) ) ) from 0x60005b280 to 0x60005b2a0 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b2c0 to 0x60005b2d0 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005b2d0 to 0x60005b2e8 ( 24 B )
DEBUG:   freed [a Symbol] and from 0x60005b2e8 to 0x60005b300 ( 24 B )
DEBUG:   freed [a Symbol] lambda from 0x60005b300 to 0x60005b318 ( 24 B )
DEBUG:   freed nil from 0x60005b480 to 0x60005b490 ( 16 B )
DEBUG:   freed [a Const] ( ( if ( a ( b ( #f nil ) ) ) ) nil ) from 0x60005b490 to 0x60005b4b0 ( 32 B )
DEBUG:   freed [a Const] ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) from 0x60005b4b0 to 0x60005b4d0 ( 32 B )
DEBUG:   freed [a Const] ( lambda ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) ) from 0x60005b4d0 to 0x60005b4f0 ( 32 B )
DEBUG:   freed nil from 0x60005b4f0 to 0x60005b500 ( 16 B )
DEBUG:   freed [a Const] ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) ) nil ) from 0x60005b500 to 0x60005b520 ( 32 B )
DEBUG:   freed [a Const] ( and ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) ) nil ) ) from 0x60005b520 to 0x60005b540 ( 32 B )
DEBUG:   freed [a Const] ( define ( and ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( b ( #f nil ) ) ) ) nil ) ) ) nil ) ) ) from 0x60005b540 to 0x60005b560 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b580 to 0x60005b590 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005b590 to 0x60005b5a8 ( 24 B )
DEBUG:   freed [a Symbol] or from 0x60005b5a8 to 0x60005b5c0 ( 24 B )
DEBUG:   freed [a Symbol] lambda from 0x60005b5c0 to 0x60005b5d8 ( 24 B )
DEBUG:   freed nil from 0x60005b740 to 0x60005b750 ( 16 B )
DEBUG:   freed [a Const] ( ( if ( a ( #t ( b nil ) ) ) ) nil ) from 0x60005b750 to 0x60005b770 ( 32 B )
DEBUG:   freed [a Const] ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) from 0x60005b770 to 0x60005b790 ( 32 B )
DEBUG:   freed [a Const] ( lambda ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) ) from 0x60005b790 to 0x60005b7b0 ( 32 B )
DEBUG:   freed nil from 0x60005b7b0 to 0x60005b7c0 ( 16 B )
DEBUG:   freed [a Const] ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) ) nil ) from 0x60005b7c0 to 0x60005b7e0 ( 32 B )
DEBUG:   freed [a Const] ( or ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) ) nil ) ) from 0x60005b7e0 to 0x60005b800 ( 32 B )
DEBUG:   freed [a Const] ( define ( or ( ( lambda ( ( a ( b nil ) ) ( ( if ( a ( #t ( b nil ) ) ) ) nil ) ) ) nil ) ) ) from 0x60005b800 to 0x60005b820 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b840 to 0x60005b850 ( 16 B )
DEBUG:   freed [a Symbol] if from 0x60005b958 to 0x60005b970 ( 24 B )
DEBUG: garbage collected - freed enough memory
DEBUG: allocated [a Const] ( n ( n nil ) ) from 0x60005aa78 to 0x60005aa98 ( 32 B ) in 727800 ns
DEBUG: allocated [a Const] ( * ( n ( n nil ) ) ) from 0x60005aa98 to 0x60005aab8 ( 32 B ) in 1700 ns
DEBUG: allocated nil from 0x60005aab8 to 0x60005aac8 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( * ( n ( n nil ) ) ) nil ) from 0x60005aac8 to 0x60005aae8 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) from 0x60005aae8 to 0x60005ab08 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( lambda ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) ) from 0x60005ab08 to 0x60005ab28 ( 32 B ) in 1200 ns
DEBUG: allocated nil from 0x60005ab28 to 0x60005ab38 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( lambda ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) ) nil ) from 0x60005ab38 to 0x60005ab58 ( 32 B ) in 1700 ns
DEBUG: allocated [a Const] ( square ( ( lambda ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) ) nil ) ) from 0x60005ab58 to 0x60005ab78 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( define ( square ( ( lambda ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) ) nil ) ) ) from 0x60005ab78 to 0x60005ab98 ( 32 B ) in 1300 ns
DEBUG: allocated [a Void (scary, right?)] from 0x60005ab98 to 0x60005abb8 ( 32 B ) in 1200 ns
DEBUG: allocated [an Object]  from 0x60005abb8 to 0x60005abc8 ( 16 B ) in 1200 ns

> DEBUG: allocated [a Symbol] define from 0x60005abc8 to 0x60005abe0 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] fac from 0x60005abe0 to 0x60005abf8 ( 24 B ) in 1700 ns
DEBUG: allocated [a Symbol] lambda from 0x60005abf8 to 0x60005ac10 ( 24 B ) in 1700 ns
DEBUG: allocated [a Symbol] n from 0x60005ac10 to 0x60005ac28 ( 24 B ) in 1600 ns
DEBUG: allocated nil from 0x60005ac28 to 0x60005ac38 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( n nil ) from 0x60005ac38 to 0x60005ac58 ( 32 B ) in 1200 ns
DEBUG: allocated [a Symbol] if from 0x60005ac58 to 0x60005ac70 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] = from 0x60005ac70 to 0x60005ac88 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] n from 0x60005ac88 to 0x60005aca0 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 1 from 0x60005aca0 to 0x60005acb8 ( 24 B ) in 1600 ns
DEBUG: allocated nil from 0x60005acb8 to 0x60005acc8 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 1 nil ) from 0x60005acc8 to 0x60005ace8 ( 32 B ) in 1200 ns
DEBUG: allocated [a Const] ( n ( 1 nil ) ) from 0x60005ace8 to 0x60005ad08 ( 32 B ) in 1300 ns
DEBUG: allocated [a Const] ( = ( n ( 1 nil ) ) ) from 0x60005ad08 to 0x60005ad28 ( 32 B ) in 1200 ns
DEBUG: allocated [an Integer] 1 from 0x60005ad28 to 0x60005ad40 ( 24 B ) in 1200 ns
DEBUG: allocated [a Symbol] * from 0x60005ad40 to 0x60005ad58 ( 24 B ) in 1300 ns
DEBUG: allocated [a Symbol] n from 0x60005ad58 to 0x60005ad70 ( 24 B ) in 1300 ns
DEBUG: allocated [a Symbol] fac from 0x60005ad70 to 0x60005ad88 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] - from 0x60005ad88 to 0x60005ada0 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] n from 0x60005ada0 to 0x60005adb8 ( 24 B ) in 2400 ns
DEBUG: allocated [an Integer] 1 from 0x60005adb8 to 0x60005add0 ( 24 B ) in 4100 ns
DEBUG: allocated nil from 0x60005add0 to 0x60005ade0 ( 16 B ) in 2100 ns
DEBUG: allocated [a Const] ( 1 nil ) from 0x60005ade0 to 0x60005ae00 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( n ( 1 nil ) ) from 0x60005ae00 to 0x60005ae20 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( - ( n ( 1 nil ) ) ) from 0x60005ae20 to 0x60005ae40 ( 32 B ) in 17300 ns
DEBUG: allocated nil from 0x60005ae40 to 0x60005ae50 ( 16 B ) in 2400 ns
DEBUG: allocated [a Const] ( ( - ( n ( 1 nil ) ) ) nil ) from 0x60005ae50 to 0x60005ae70 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) from 0x60005ae70 to 0x60005ae90 ( 32 B ) in 2100 ns
DEBUG: allocated nil from 0x60005ae90 to 0x60005aea0 ( 16 B ) in 1700 ns
DEBUG: allocated [a Const] ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) from 0x60005aea0 to 0x60005aec0 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) from 0x60005aec0 to 0x60005aee0 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) from 0x60005aee0 to 0x60005af00 ( 32 B ) in 2100 ns
DEBUG: allocated nil from 0x60005af00 to 0x60005af10 ( 16 B ) in 2500 ns
DEBUG: allocated [a Const] ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) from 0x60005af10 to 0x60005af30 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) from 0x60005af30 to 0x60005af50 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) from 0x60005af50 to 0x60005af70 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) from 0x60005af70 to 0x60005af90 ( 32 B ) in 2100 ns
DEBUG: allocated nil from 0x60005af90 to 0x60005afa0 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) from 0x60005afa0 to 0x60005afc0 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) from 0x60005afc0 to 0x60005afe0 ( 32 B ) in 1700 ns
DEBUG: allocated [a Const] ( lambda ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) ) from 0x60005afe0 to 0x60005b000 ( 32 B ) in 2000 ns
DEBUG: allocated nil from 0x60005b000 to 0x60005b010 ( 16 B ) in 2100 ns
DEBUG: allocated [a Const] ( ( lambda ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) ) nil ) from 0x60005b010 to 0x60005b030 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( fac ( ( lambda ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) ) nil ) ) from 0x60005b030 to 0x60005b050 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( define ( fac ( ( lambda ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) ) nil ) ) ) from 0x60005b050 to 0x60005b070 ( 32 B ) in 2500 ns
DEBUG: allocated [a Void (scary, right?)] from 0x60005b070 to 0x60005b090 ( 32 B ) in 2500 ns
DEBUG: allocated [an Object]  from 0x60005b1c0 to 0x60005b1d0 ( 16 B ) in 2500 ns

> DEBUG: allocated [a Symbol] define from 0x60005b1d0 to 0x60005b1e8 ( 24 B ) in 3300 ns
DEBUG: allocated [a Symbol] a from 0x60005b1e8 to 0x60005b200 ( 24 B ) in 2800 ns
DEBUG: allocated [an Integer] 10 from 0x60005b200 to 0x60005b218 ( 24 B ) in 2100 ns
DEBUG: allocated nil from 0x60005b218 to 0x60005b228 ( 16 B ) in 2100 ns
DEBUG: allocated [a Const] ( 10 nil ) from 0x60005b228 to 0x60005b248 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( a ( 10 nil ) ) from 0x60005b248 to 0x60005b268 ( 32 B ) in 2400 ns
DEBUG: allocated [a Const] ( define ( a ( 10 nil ) ) ) from 0x60005b268 to 0x60005b288 ( 32 B ) in 2500 ns
DEBUG: allocated [an Object]  from 0x60005b288 to 0x60005b298 ( 16 B ) in 1600 ns

> DEBUG: allocated [a Symbol] define from 0x60005b2c0 to 0x60005b2d8 ( 24 B ) in 3300 ns
DEBUG: allocated [a Symbol] b from 0x60005b2d8 to 0x60005b2f0 ( 24 B ) in 2900 ns
DEBUG: allocated [an Integer] 20 from 0x60005b2f0 to 0x60005b308 ( 24 B ) in 2100 ns
DEBUG: allocated nil from 0x60005b308 to 0x60005b318 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( 20 nil ) from 0x60005b480 to 0x60005b4a0 ( 32 B ) in 2900 ns
DEBUG: allocated [a Const] ( b ( 20 nil ) ) from 0x60005b4a0 to 0x60005b4c0 ( 32 B ) in 2400 ns
DEBUG: allocated [a Const] ( define ( b ( 20 nil ) ) ) from 0x60005b4c0 to 0x60005b4e0 ( 32 B ) in 2100 ns
DEBUG: allocated [an Object]  from 0x60005b4e0 to 0x60005b4f0 ( 16 B ) in 2100 ns

> DEBUG: allocated [a Symbol] not from 0x60005b4f0 to 0x60005b508 ( 24 B ) in 2800 ns
DEBUG: allocated [a Boolean] #t from 0x60005b508 to 0x60005b518 ( 16 B ) in 2500 ns
DEBUG: allocated nil from 0x60005b518 to 0x60005b528 ( 16 B ) in 2100 ns
DEBUG: allocated [a Const] ( #t nil ) from 0x60005b528 to 0x60005b548 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( not ( #t nil ) ) from 0x60005b580 to 0x60005b5a0 ( 32 B ) in 2400 ns
#f
> DEBUG: allocated [a Symbol] not from 0x60005b548 to 0x60005b560 ( 24 B ) in 2500 ns
DEBUG: allocated [a Symbol] = from 0x60005b5a0 to 0x60005b5b8 ( 24 B ) in 2900 ns
DEBUG: allocated [an Integer] 3 from 0x60005b5b8 to 0x60005b5d0 ( 24 B ) in 2100 ns
DEBUG: allocated [an Integer] 4 from 0x60005b740 to 0x60005b758 ( 24 B ) in 2100 ns
DEBUG: allocated nil from 0x60005b758 to 0x60005b768 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( 4 nil ) from 0x60005b768 to 0x60005b788 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( 3 ( 4 nil ) ) from 0x60005b788 to 0x60005b7a8 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( = ( 3 ( 4 nil ) ) ) from 0x60005b7a8 to 0x60005b7c8 ( 32 B ) in 2500 ns
DEBUG: allocated nil from 0x60005b7c8 to 0x60005b7d8 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( ( = ( 3 ( 4 nil ) ) ) nil ) from 0x60005b7d8 to 0x60005b7f8 ( 32 B ) in 2400 ns
DEBUG: allocated [a Const] ( not ( ( = ( 3 ( 4 nil ) ) ) nil ) ) from 0x60005b7f8 to 0x60005b818 ( 32 B ) in 2500 ns
DEBUG: allocated [a Boolean] #f from 0x60005b840 to 0x60005b850 ( 16 B ) in 1200 ns
#t
> DEBUG: allocated [a Symbol] and from 0x60005b958 to 0x60005b970 ( 24 B ) in 2100 ns
DEBUG: collecting garbage to free 16 B
DEBUG:   freed nil from 0x60005aab8 to 0x60005aac8 ( 16 B )
DEBUG:   freed [a Const] ( ( * ( n ( n nil ) ) ) nil ) from 0x60005aac8 to 0x60005aae8 ( 32 B )
DEBUG:   freed [a Const] ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) from 0x60005aae8 to 0x60005ab08 ( 32 B )
DEBUG:   freed [a Const] ( lambda ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) ) from 0x60005ab08 to 0x60005ab28 ( 32 B )
DEBUG:   freed nil from 0x60005ab28 to 0x60005ab38 ( 16 B )
DEBUG:   freed [a Const] ( ( lambda ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) ) nil ) from 0x60005ab38 to 0x60005ab58 ( 32 B )
DEBUG:   freed [a Const] ( square ( ( lambda ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) ) nil ) ) from 0x60005ab58 to 0x60005ab78 ( 32 B )
DEBUG:   freed [a Const] ( define ( square ( ( lambda ( ( n nil ) ( ( * ( n ( n nil ) ) ) nil ) ) ) nil ) ) ) from 0x60005ab78 to 0x60005ab98 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005abb8 to 0x60005abc8 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005abc8 to 0x60005abe0 ( 24 B )
DEBUG:   freed [a Symbol] fac from 0x60005abe0 to 0x60005abf8 ( 24 B )
DEBUG:   freed [a Symbol] lambda from 0x60005abf8 to 0x60005ac10 ( 24 B )
DEBUG:   freed nil from 0x60005af90 to 0x60005afa0 ( 16 B )
DEBUG:   freed [a Const] ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) from 0x60005afa0 to 0x60005afc0 ( 32 B )
DEBUG:   freed [a Const] ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) from 0x60005afc0 to 0x60005afe0 ( 32 B )
DEBUG:   freed [a Const] ( lambda ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) ) from 0x60005afe0 to 0x60005b000 ( 32 B )
DEBUG:   freed nil from 0x60005b000 to 0x60005b010 ( 16 B )
DEBUG:   freed [a Const] ( ( lambda ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) ) nil ) from 0x60005b010 to 0x60005b030 ( 32 B )
DEBUG:   freed [a Const] ( fac ( ( lambda ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) ) nil ) ) from 0x60005b030 to 0x60005b050 ( 32 B )
DEBUG:   freed [a Const] ( define ( fac ( ( lambda ( ( n nil ) ( ( if ( ( = ( n ( 1 nil ) ) ) ( 1 ( ( * ( n ( ( fac ( ( - ( n ( 1 nil ) ) ) nil ) ) nil ) ) ) nil ) ) ) ) nil ) ) ) nil ) ) ) from 0x60005b050 to 0x60005b070 ( 32 B )
DEBUG:   empty space from 0x60005b090 to 0x60005b098 ( 8 B )
DEBUG:   freed [an Object]  from 0x60005b1c0 to 0x60005b1d0 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005b1d0 to 0x60005b1e8 ( 24 B )
DEBUG:   freed [a Symbol] a from 0x60005b1e8 to 0x60005b200 ( 24 B )
DEBUG:   freed nil from 0x60005b218 to 0x60005b228 ( 16 B )
DEBUG:   freed [a Const] ( 10 nil ) from 0x60005b228 to 0x60005b248 ( 32 B )
DEBUG:   freed [a Const] ( a ( 10 nil ) ) from 0x60005b248 to 0x60005b268 ( 32 B )
DEBUG:   freed [a Const] ( define ( a ( 10 nil ) ) ) from 0x60005b268 to 0x60005b288 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b288 to 0x60005b298 ( 16 B )
DEBUG:   empty space from 0x60005b298 to 0x60005b2a0 ( 8 B )
DEBUG:   freed [a Symbol] define from 0x60005b2c0 to 0x60005b2d8 ( 24 B )
DEBUG:   freed [a Symbol] b from 0x60005b2d8 to 0x60005b2f0 ( 24 B )
DEBUG:   freed nil from 0x60005b308 to 0x60005b318 ( 16 B )
DEBUG:   freed [a Const] ( 20 nil ) from 0x60005b480 to 0x60005b4a0 ( 32 B )
DEBUG:   freed [a Const] ( b ( 20 nil ) ) from 0x60005b4a0 to 0x60005b4c0 ( 32 B )
DEBUG:   freed [a Const] ( define ( b ( 20 nil ) ) ) from 0x60005b4c0 to 0x60005b4e0 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b4e0 to 0x60005b4f0 ( 16 B )
DEBUG:   freed [a Symbol] not from 0x60005b4f0 to 0x60005b508 ( 24 B )
DEBUG:   freed [a Boolean] #t from 0x60005b508 to 0x60005b518 ( 16 B )
DEBUG:   freed nil from 0x60005b518 to 0x60005b528 ( 16 B )
DEBUG:   freed [a Const] ( #t nil ) from 0x60005b528 to 0x60005b548 ( 32 B )
DEBUG:   freed [a Symbol] not from 0x60005b548 to 0x60005b560 ( 24 B )
DEBUG:   freed [a Const] ( not ( #t nil ) ) from 0x60005b580 to 0x60005b5a0 ( 32 B )
DEBUG:   freed [a Symbol] = from 0x60005b5a0 to 0x60005b5b8 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005b5b8 to 0x60005b5d0 ( 24 B )
DEBUG:   empty space from 0x60005b5d0 to 0x60005b5d8 ( 8 B )
DEBUG:   freed [an Integer] 4 from 0x60005b740 to 0x60005b758 ( 24 B )
DEBUG:   freed nil from 0x60005b758 to 0x60005b768 ( 16 B )
DEBUG:   freed [a Const] ( 4 nil ) from 0x60005b768 to 0x60005b788 ( 32 B )
DEBUG:   freed [a Const] ( 3 ( 4 nil ) ) from 0x60005b788 to 0x60005b7a8 ( 32 B )
DEBUG:   freed [a Const] ( = ( 3 ( 4 nil ) ) ) from 0x60005b7a8 to 0x60005b7c8 ( 32 B )
DEBUG:   freed nil from 0x60005b7c8 to 0x60005b7d8 ( 16 B )
DEBUG:   freed [a Const] ( ( = ( 3 ( 4 nil ) ) ) nil ) from 0x60005b7d8 to 0x60005b7f8 ( 32 B )
DEBUG:   freed [a Const] ( not ( ( = ( 3 ( 4 nil ) ) ) nil ) ) from 0x60005b7f8 to 0x60005b818 ( 32 B )
DEBUG:   empty space from 0x60005b818 to 0x60005b820 ( 8 B )
DEBUG:   freed [a Boolean] #f from 0x60005b840 to 0x60005b850 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005b850 to 0x60005b868 ( 24 B )
DEBUG:   freed [a Symbol] square from 0x60005b868 to 0x60005b880 ( 24 B )
DEBUG:   freed [a Symbol] lambda from 0x60005b880 to 0x60005b898 ( 24 B )
DEBUG: garbage collected - freed enough memory
DEBUG: allocated [a Boolean] #t from 0x60005aab8 to 0x60005aac8 ( 16 B ) in 617400 ns
DEBUG: allocated [a Boolean] #t from 0x60005aac8 to 0x60005aad8 ( 16 B ) in 2100 ns
DEBUG: allocated nil from 0x60005aad8 to 0x60005aae8 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( #t nil ) from 0x60005aae8 to 0x60005ab08 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( #t ( #t nil ) ) from 0x60005ab08 to 0x60005ab28 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( and ( #t ( #t nil ) ) ) from 0x60005ab28 to 0x60005ab48 ( 32 B ) in 1600 ns
#t
> DEBUG: allocated [a Symbol] square from 0x60005ab48 to 0x60005ab60 ( 24 B ) in 2500 ns
DEBUG: allocated [a Symbol] a from 0x60005ab60 to 0x60005ab78 ( 24 B ) in 2000 ns
DEBUG: allocated nil from 0x60005ab78 to 0x60005ab88 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( a nil ) from 0x60005abb8 to 0x60005abd8 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( square ( a nil ) ) from 0x60005abd8 to 0x60005abf8 ( 32 B ) in 2000 ns
DEBUG: allocated [an Integer] 100 from 0x60005abf8 to 0x60005ac10 ( 24 B ) in 1200 ns
100
> DEBUG: allocated [a Symbol] square from 0x60005af90 to 0x60005afa8 ( 24 B ) in 2500 ns
DEBUG: allocated [a Symbol] * from 0x60005afa8 to 0x60005afc0 ( 24 B ) in 2100 ns
DEBUG: allocated [an Integer] 2 from 0x60005afc0 to 0x60005afd8 ( 24 B ) in 2000 ns
DEBUG: allocated [an Integer] 1 from 0x60005afd8 to 0x60005aff0 ( 24 B ) in 1700 ns
DEBUG: allocated nil from 0x60005ab88 to 0x60005ab98 ( 16 B ) in 800 ns
DEBUG: allocated [a Const] ( 1 nil ) from 0x60005aff0 to 0x60005b010 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( 2 ( 1 nil ) ) from 0x60005b010 to 0x60005b030 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( * ( 2 ( 1 nil ) ) ) from 0x60005b030 to 0x60005b050 ( 32 B ) in 2100 ns
DEBUG: allocated nil from 0x60005b050 to 0x60005b060 ( 16 B ) in 2100 ns
DEBUG: allocated [a Const] ( ( * ( 2 ( 1 nil ) ) ) nil ) from 0x60005b1c0 to 0x60005b1e0 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( square ( ( * ( 2 ( 1 nil ) ) ) nil ) ) from 0x60005b1e0 to 0x60005b200 ( 32 B ) in 1700 ns
DEBUG: allocated [an Integer] 2 from 0x60005b218 to 0x60005b230 ( 24 B ) in 2500 ns
DEBUG: allocated [an Integer] 4 from 0x60005b230 to 0x60005b248 ( 24 B ) in 2000 ns
4
> DEBUG: allocated [a Symbol] fac from 0x60005b248 to 0x60005b260 ( 24 B ) in 3200 ns
DEBUG: allocated [an Integer] 4 from 0x60005b260 to 0x60005b278 ( 24 B ) in 2100 ns
DEBUG: allocated nil from 0x60005b060 to 0x60005b070 ( 16 B ) in 800 ns
DEBUG: allocated [a Const] ( 4 nil ) from 0x60005b278 to 0x60005b298 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( fac ( 4 nil ) ) from 0x60005b2c0 to 0x60005b2e0 ( 32 B ) in 2000 ns
DEBUG: allocated [a Boolean] #f from 0x60005b2e0 to 0x60005b2f0 ( 16 B ) in 1200 ns
DEBUG: allocated [an Integer] 3 from 0x60005b480 to 0x60005b498 ( 24 B ) in 2000 ns
DEBUG: allocated [a Boolean] #f from 0x60005b308 to 0x60005b318 ( 16 B ) in 1200 ns
DEBUG: allocated [an Integer] 2 from 0x60005b498 to 0x60005b4b0 ( 24 B ) in 2100 ns
DEBUG: allocated [a Boolean] #f from 0x60005b4b0 to 0x60005b4c0 ( 16 B ) in 2000 ns
DEBUG: allocated [an Integer] 1 from 0x60005b4c0 to 0x60005b4d8 ( 24 B ) in 2100 ns
DEBUG: allocated [a Boolean] #t from 0x60005b4d8 to 0x60005b4e8 ( 16 B ) in 2000 ns
DEBUG: allocated [an Integer] 2 from 0x60005b4e8 to 0x60005b500 ( 24 B ) in 2000 ns
DEBUG: allocated [an Integer] 6 from 0x60005b500 to 0x60005b518 ( 24 B ) in 2000 ns
DEBUG: allocated [an Integer] 24 from 0x60005b518 to 0x60005b530 ( 24 B ) in 1700 ns
24
> DEBUG: allocated [a Symbol] define from 0x60005b530 to 0x60005b548 ( 24 B ) in 3200 ns
DEBUG: allocated [a Symbol] cadr from 0x60005b548 to 0x60005b560 ( 24 B ) in 2100 ns
DEBUG: allocated [a Symbol] lambda from 0x60005b580 to 0x60005b598 ( 24 B ) in 2800 ns
DEBUG: allocated [a Symbol] l from 0x60005b598 to 0x60005b5b0 ( 24 B ) in 2400 ns
DEBUG: allocated nil from 0x60005b5b0 to 0x60005b5c0 ( 16 B ) in 2100 ns
DEBUG: allocated [a Const] ( l nil ) from 0x60005b740 to 0x60005b760 ( 32 B ) in 2400 ns
DEBUG: allocated [a Symbol] car from 0x60005b5c0 to 0x60005b5d8 ( 24 B ) in 1600 ns
DEBUG: allocated [a Symbol] cdr from 0x60005b760 to 0x60005b778 ( 24 B ) in 2400 ns
DEBUG: allocated [a Symbol] l from 0x60005b778 to 0x60005b790 ( 24 B ) in 2500 ns
DEBUG: allocated nil from 0x60005b790 to 0x60005b7a0 ( 16 B ) in 1700 ns
DEBUG: allocated [a Const] ( l nil ) from 0x60005b7a0 to 0x60005b7c0 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( cdr ( l nil ) ) from 0x60005b7c0 to 0x60005b7e0 ( 32 B ) in 2100 ns
DEBUG: allocated nil from 0x60005b7e0 to 0x60005b7f0 ( 16 B ) in 1600 ns
DEBUG: allocated [a Const] ( ( cdr ( l nil ) ) nil ) from 0x60005b7f0 to 0x60005b810 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( car ( ( cdr ( l nil ) ) nil ) ) from 0x60005b840 to 0x60005b860 ( 32 B ) in 2400 ns
DEBUG: allocated nil from 0x60005b810 to 0x60005b820 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) from 0x60005b860 to 0x60005b880 ( 32 B ) in 2000 ns
DEBUG: collecting garbage to free 32 B
DEBUG:   freed [a Boolean] #t from 0x60005aab8 to 0x60005aac8 ( 16 B )
DEBUG:   freed [a Boolean] #t from 0x60005aac8 to 0x60005aad8 ( 16 B )
DEBUG:   freed nil from 0x60005aad8 to 0x60005aae8 ( 16 B )
DEBUG:   freed [a Const] ( #t nil ) from 0x60005aae8 to 0x60005ab08 ( 32 B )
DEBUG:   freed [a Const] ( #t ( #t nil ) ) from 0x60005ab08 to 0x60005ab28 ( 32 B )
DEBUG:   freed [a Const] ( and ( #t ( #t nil ) ) ) from 0x60005ab28 to 0x60005ab48 ( 32 B )
DEBUG:   freed [a Symbol] square from 0x60005ab48 to 0x60005ab60 ( 24 B )
DEBUG:   freed [a Symbol] a from 0x60005ab60 to 0x60005ab78 ( 24 B )
DEBUG:   freed nil from 0x60005ab78 to 0x60005ab88 ( 16 B )
DEBUG:   freed nil from 0x60005ab88 to 0x60005ab98 ( 16 B )
DEBUG:   freed [a Const] ( a nil ) from 0x60005abb8 to 0x60005abd8 ( 32 B )
DEBUG:   freed [a Const] ( square ( a nil ) ) from 0x60005abd8 to 0x60005abf8 ( 32 B )
DEBUG:   freed [an Integer] 100 from 0x60005abf8 to 0x60005ac10 ( 24 B )
DEBUG:   freed [a Symbol] square from 0x60005af90 to 0x60005afa8 ( 24 B )
DEBUG:   freed [a Symbol] * from 0x60005afa8 to 0x60005afc0 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005afc0 to 0x60005afd8 ( 24 B )
DEBUG:   freed [an Integer] 1 from 0x60005afd8 to 0x60005aff0 ( 24 B )
DEBUG:   freed [a Const] ( 1 nil ) from 0x60005aff0 to 0x60005b010 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 1 nil ) ) from 0x60005b010 to 0x60005b030 ( 32 B )
DEBUG:   freed [a Const] ( * ( 2 ( 1 nil ) ) ) from 0x60005b030 to 0x60005b050 ( 32 B )
DEBUG:   freed nil from 0x60005b050 to 0x60005b060 ( 16 B )
DEBUG:   freed nil from 0x60005b060 to 0x60005b070 ( 16 B )
DEBUG:   empty space from 0x60005b090 to 0x60005b098 ( 8 B )
DEBUG:   freed [a Const] ( ( * ( 2 ( 1 nil ) ) ) nil ) from 0x60005b1c0 to 0x60005b1e0 ( 32 B )
DEBUG:   freed [a Const] ( square ( ( * ( 2 ( 1 nil ) ) ) nil ) ) from 0x60005b1e0 to 0x60005b200 ( 32 B )
DEBUG:   freed [an Integer] 2 from 0x60005b218 to 0x60005b230 ( 24 B )
DEBUG:   freed [an Integer] 4 from 0x60005b230 to 0x60005b248 ( 24 B )
DEBUG:   freed [a Symbol] fac from 0x60005b248 to 0x60005b260 ( 24 B )
DEBUG:   freed [an Integer] 4 from 0x60005b260 to 0x60005b278 ( 24 B )
DEBUG:   freed [a Const] ( 4 nil ) from 0x60005b278 to 0x60005b298 ( 32 B )
DEBUG:   empty space from 0x60005b298 to 0x60005b2a0 ( 8 B )
DEBUG:   freed [a Const] ( fac ( 4 nil ) ) from 0x60005b2c0 to 0x60005b2e0 ( 32 B )
DEBUG:   freed [a Boolean] #f from 0x60005b2e0 to 0x60005b2f0 ( 16 B )
DEBUG:   freed [a Boolean] #f from 0x60005b308 to 0x60005b318 ( 16 B )
DEBUG:   freed [an Integer] 3 from 0x60005b480 to 0x60005b498 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005b498 to 0x60005b4b0 ( 24 B )
DEBUG:   freed [a Boolean] #f from 0x60005b4b0 to 0x60005b4c0 ( 16 B )
DEBUG:   freed [an Integer] 1 from 0x60005b4c0 to 0x60005b4d8 ( 24 B )
DEBUG:   freed [a Boolean] #t from 0x60005b4d8 to 0x60005b4e8 ( 16 B )
DEBUG:   freed [an Integer] 2 from 0x60005b4e8 to 0x60005b500 ( 24 B )
DEBUG:   freed [an Integer] 6 from 0x60005b500 to 0x60005b518 ( 24 B )
DEBUG:   freed [an Integer] 24 from 0x60005b518 to 0x60005b530 ( 24 B )
DEBUG:   empty space from 0x60005b880 to 0x60005b898 ( 24 B )
DEBUG:   freed [a Symbol] and from 0x60005b958 to 0x60005b970 ( 24 B )
DEBUG: garbage collected - freed enough memory
DEBUG: allocated [a Const] ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) from 0x60005aab8 to 0x60005aad8 ( 32 B ) in 469600 ns
DEBUG: allocated [a Const] ( lambda ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) ) from 0x60005aad8 to 0x60005aaf8 ( 32 B ) in 2500 ns
DEBUG: allocated nil from 0x60005aaf8 to 0x60005ab08 ( 16 B ) in 2500 ns
DEBUG: allocated [a Const] ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) ) nil ) from 0x60005ab08 to 0x60005ab28 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( cadr ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) ) nil ) ) from 0x60005ab28 to 0x60005ab48 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( define ( cadr ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) ) nil ) ) ) from 0x60005ab48 to 0x60005ab68 ( 32 B ) in 2100 ns
DEBUG: allocated [a Void (scary, right?)] from 0x60005ab68 to 0x60005ab88 ( 32 B ) in 2500 ns
DEBUG: allocated [an Object]  from 0x60005ab88 to 0x60005ab98 ( 16 B ) in 1200 ns

> DEBUG: allocated [a Symbol] define from 0x60005abb8 to 0x60005abd0 ( 24 B ) in 3300 ns
DEBUG: allocated [a Symbol] caddr from 0x60005abd0 to 0x60005abe8 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] lambda from 0x60005abe8 to 0x60005ac00 ( 24 B ) in 3300 ns
DEBUG: allocated [a Symbol] l from 0x60005af90 to 0x60005afa8 ( 24 B ) in 2900 ns
DEBUG: allocated nil from 0x60005ac00 to 0x60005ac10 ( 16 B ) in 900 ns
DEBUG: allocated [a Const] ( l nil ) from 0x60005afa8 to 0x60005afc8 ( 32 B ) in 2500 ns
DEBUG: allocated [a Symbol] car from 0x60005afc8 to 0x60005afe0 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] cdr from 0x60005afe0 to 0x60005aff8 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] cdr from 0x60005aff8 to 0x60005b010 ( 24 B ) in 2400 ns
DEBUG: allocated [a Symbol] l from 0x60005b010 to 0x60005b028 ( 24 B ) in 2500 ns
DEBUG: allocated nil from 0x60005b028 to 0x60005b038 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( l nil ) from 0x60005b038 to 0x60005b058 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( cdr ( l nil ) ) from 0x60005b1c0 to 0x60005b1e0 ( 32 B ) in 2500 ns
DEBUG: allocated nil from 0x60005b058 to 0x60005b068 ( 16 B ) in 2400 ns
DEBUG: allocated [a Const] ( ( cdr ( l nil ) ) nil ) from 0x60005b1e0 to 0x60005b200 ( 32 B ) in 1600 ns
DEBUG: allocated [a Const] ( cdr ( ( cdr ( l nil ) ) nil ) ) from 0x60005b218 to 0x60005b238 ( 32 B ) in 2900 ns
DEBUG: allocated nil from 0x60005b238 to 0x60005b248 ( 16 B ) in 2000 ns
DEBUG: allocated [a Const] ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) from 0x60005b248 to 0x60005b268 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) from 0x60005b268 to 0x60005b288 ( 32 B ) in 2400 ns
DEBUG: allocated nil from 0x60005b288 to 0x60005b298 ( 16 B ) in 2500 ns
DEBUG: allocated [a Const] ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) from 0x60005b2c0 to 0x60005b2e0 ( 32 B ) in 2900 ns
DEBUG: allocated [a Const] ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) from 0x60005b480 to 0x60005b4a0 ( 32 B ) in 2800 ns
DEBUG: allocated [a Const] ( lambda ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) ) from 0x60005b4a0 to 0x60005b4c0 ( 32 B ) in 2900 ns
DEBUG: allocated nil from 0x60005b2e0 to 0x60005b2f0 ( 16 B ) in 1700 ns
DEBUG: allocated [a Const] ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) ) nil ) from 0x60005b4c0 to 0x60005b4e0 ( 32 B ) in 2400 ns
DEBUG: allocated [a Const] ( caddr ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) ) nil ) ) from 0x60005b4e0 to 0x60005b500 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( define ( caddr ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) ) nil ) ) ) from 0x60005b500 to 0x60005b520 ( 32 B ) in 2100 ns
DEBUG: collecting garbage to free 32 B
DEBUG:   freed [a Const] ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) from 0x60005aab8 to 0x60005aad8 ( 32 B )
DEBUG:   freed [a Const] ( lambda ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) ) from 0x60005aad8 to 0x60005aaf8 ( 32 B )
DEBUG:   freed nil from 0x60005aaf8 to 0x60005ab08 ( 16 B )
DEBUG:   freed [a Const] ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) ) nil ) from 0x60005ab08 to 0x60005ab28 ( 32 B )
DEBUG:   freed [a Const] ( cadr ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) ) nil ) ) from 0x60005ab28 to 0x60005ab48 ( 32 B )
DEBUG:   freed [a Const] ( define ( cadr ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) ) ) nil ) ) ) from 0x60005ab48 to 0x60005ab68 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005ab88 to 0x60005ab98 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005abb8 to 0x60005abd0 ( 24 B )
DEBUG:   freed [a Symbol] caddr from 0x60005abd0 to 0x60005abe8 ( 24 B )
DEBUG:   freed [a Symbol] lambda from 0x60005abe8 to 0x60005ac00 ( 24 B )
DEBUG:   empty space from 0x60005b068 to 0x60005b070 ( 8 B )
DEBUG:   empty space from 0x60005b090 to 0x60005b098 ( 8 B )
DEBUG:   freed nil from 0x60005b288 to 0x60005b298 ( 16 B )
DEBUG:   empty space from 0x60005b298 to 0x60005b2a0 ( 8 B )
DEBUG:   freed [a Const] ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) from 0x60005b2c0 to 0x60005b2e0 ( 32 B )
DEBUG:   freed nil from 0x60005b2e0 to 0x60005b2f0 ( 16 B )
DEBUG:   empty space from 0x60005b308 to 0x60005b318 ( 16 B )
DEBUG:   freed [a Const] ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) from 0x60005b480 to 0x60005b4a0 ( 32 B )
DEBUG:   freed [a Const] ( lambda ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) ) from 0x60005b4a0 to 0x60005b4c0 ( 32 B )
DEBUG:   freed [a Const] ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) ) nil ) from 0x60005b4c0 to 0x60005b4e0 ( 32 B )
DEBUG:   freed [a Const] ( caddr ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) ) nil ) ) from 0x60005b4e0 to 0x60005b500 ( 32 B )
DEBUG:   freed [a Const] ( define ( caddr ( ( lambda ( ( l nil ) ( ( car ( ( cdr ( ( cdr ( l nil ) ) nil ) ) nil ) ) nil ) ) ) nil ) ) ) from 0x60005b500 to 0x60005b520 ( 32 B )
DEBUG:   empty space from 0x60005b520 to 0x60005b530 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005b530 to 0x60005b548 ( 24 B )
DEBUG:   freed [a Symbol] cadr from 0x60005b548 to 0x60005b560 ( 24 B )
DEBUG:   freed [a Symbol] lambda from 0x60005b580 to 0x60005b598 ( 24 B )
DEBUG:   freed nil from 0x60005b810 to 0x60005b820 ( 16 B )
DEBUG:   freed [a Const] ( ( car ( ( cdr ( l nil ) ) nil ) ) nil ) from 0x60005b860 to 0x60005b880 ( 32 B )
DEBUG:   empty space from 0x60005b880 to 0x60005b898 ( 24 B )
DEBUG:   empty space from 0x60005b958 to 0x60005b970 ( 24 B )
DEBUG: garbage collected - freed enough memory
DEBUG: allocated [a Void (scary, right?)] from 0x60005aab8 to 0x60005aad8 ( 32 B ) in 353900 ns
DEBUG: allocated [an Object]  from 0x60005aad8 to 0x60005aae8 ( 16 B ) in 2000 ns

> DEBUG: allocated [a Symbol] define from 0x60005aae8 to 0x60005ab00 ( 24 B ) in 3300 ns
DEBUG: allocated [a Symbol] first from 0x60005ab00 to 0x60005ab18 ( 24 B ) in 2500 ns
DEBUG: allocated [a Symbol] car from 0x60005ab18 to 0x60005ab30 ( 24 B ) in 2500 ns
DEBUG: allocated nil from 0x60005ab30 to 0x60005ab40 ( 16 B ) in 1700 ns
DEBUG: allocated [a Const] ( car nil ) from 0x60005ab40 to 0x60005ab60 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( first ( car nil ) ) from 0x60005abb8 to 0x60005abd8 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( define ( first ( car nil ) ) ) from 0x60005abd8 to 0x60005abf8 ( 32 B ) in 2000 ns
DEBUG: allocated [an Object]  from 0x60005ab88 to 0x60005ab98 ( 16 B ) in 1200 ns

> DEBUG: allocated [a Symbol] define from 0x60005b288 to 0x60005b2a0 ( 24 B ) in 2400 ns
DEBUG: allocated [a Symbol] second from 0x60005b2c0 to 0x60005b2d8 ( 24 B ) in 3300 ns
DEBUG: allocated [a Symbol] cadr from 0x60005b2d8 to 0x60005b2f0 ( 24 B ) in 2500 ns
DEBUG: allocated nil from 0x60005b308 to 0x60005b318 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( cadr nil ) from 0x60005b480 to 0x60005b4a0 ( 32 B ) in 2400 ns
DEBUG: allocated [a Const] ( second ( cadr nil ) ) from 0x60005b4a0 to 0x60005b4c0 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( define ( second ( cadr nil ) ) ) from 0x60005b4c0 to 0x60005b4e0 ( 32 B ) in 2100 ns
DEBUG: allocated [an Object]  from 0x60005b4e0 to 0x60005b4f0 ( 16 B ) in 2000 ns

> DEBUG: allocated [a Symbol] define from 0x60005b4f0 to 0x60005b508 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] third from 0x60005b508 to 0x60005b520 ( 24 B ) in 2900 ns
DEBUG: allocated [a Symbol] caddr from 0x60005b520 to 0x60005b538 ( 24 B ) in 2500 ns
DEBUG: allocated nil from 0x60005b538 to 0x60005b548 ( 16 B ) in 1700 ns
DEBUG: allocated [a Const] ( caddr nil ) from 0x60005b860 to 0x60005b880 ( 32 B ) in 2500 ns
DEBUG: collecting garbage to free 32 B
DEBUG:   freed [an Object]  from 0x60005aad8 to 0x60005aae8 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005aae8 to 0x60005ab00 ( 24 B )
DEBUG:   freed [a Symbol] first from 0x60005ab00 to 0x60005ab18 ( 24 B )
DEBUG:   freed [a Symbol] car from 0x60005ab18 to 0x60005ab30 ( 24 B )
DEBUG:   freed nil from 0x60005ab30 to 0x60005ab40 ( 16 B )
DEBUG:   freed [a Const] ( car nil ) from 0x60005ab40 to 0x60005ab60 ( 32 B )
DEBUG:   empty space from 0x60005ab60 to 0x60005ab68 ( 8 B )
DEBUG:   freed [an Object]  from 0x60005ab88 to 0x60005ab98 ( 16 B )
DEBUG:   freed [a Const] ( first ( car nil ) ) from 0x60005abb8 to 0x60005abd8 ( 32 B )
DEBUG:   freed [a Const] ( define ( first ( car nil ) ) ) from 0x60005abd8 to 0x60005abf8 ( 32 B )
DEBUG:   empty space from 0x60005abf8 to 0x60005ac00 ( 8 B )
DEBUG:   empty space from 0x60005b068 to 0x60005b070 ( 8 B )
DEBUG:   empty space from 0x60005b090 to 0x60005b098 ( 8 B )
DEBUG:   freed [a Symbol] define from 0x60005b288 to 0x60005b2a0 ( 24 B )
DEBUG:   freed [a Symbol] second from 0x60005b2c0 to 0x60005b2d8 ( 24 B )
DEBUG:   freed [a Symbol] cadr from 0x60005b2d8 to 0x60005b2f0 ( 24 B )
DEBUG:   freed nil from 0x60005b308 to 0x60005b318 ( 16 B )
DEBUG:   freed [a Const] ( cadr nil ) from 0x60005b480 to 0x60005b4a0 ( 32 B )
DEBUG:   freed [a Const] ( second ( cadr nil ) ) from 0x60005b4a0 to 0x60005b4c0 ( 32 B )
DEBUG:   freed [a Const] ( define ( second ( cadr nil ) ) ) from 0x60005b4c0 to 0x60005b4e0 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005b4e0 to 0x60005b4f0 ( 16 B )
DEBUG:   empty space from 0x60005b548 to 0x60005b560 ( 24 B )
DEBUG:   empty space from 0x60005b580 to 0x60005b598 ( 24 B )
DEBUG:   empty space from 0x60005b810 to 0x60005b820 ( 16 B )
DEBUG:   empty space from 0x60005b880 to 0x60005b898 ( 24 B )
DEBUG:   empty space from 0x60005b958 to 0x60005b970 ( 24 B )
DEBUG: garbage collected - freed enough memory
DEBUG: allocated [a Const] ( third ( caddr nil ) ) from 0x60005aad8 to 0x60005aaf8 ( 32 B ) in 240600 ns
DEBUG: allocated [a Const] ( define ( third ( caddr nil ) ) ) from 0x60005aaf8 to 0x60005ab18 ( 32 B ) in 2500 ns
DEBUG: allocated [an Object]  from 0x60005ab18 to 0x60005ab28 ( 16 B ) in 1600 ns

> DEBUG: allocated [a Symbol] first from 0x60005ab28 to 0x60005ab40 ( 24 B ) in 2900 ns
DEBUG: allocated [an Integer] 1 from 0x60005ab40 to 0x60005ab58 ( 24 B ) in 2100 ns
DEBUG: allocated [an Integer] 2 from 0x60005abb8 to 0x60005abd0 ( 24 B ) in 2100 ns
DEBUG: allocated [an Integer] 3 from 0x60005abd0 to 0x60005abe8 ( 24 B ) in 1700 ns
DEBUG: allocated nil from 0x60005ab58 to 0x60005ab68 ( 16 B ) in 1300 ns
DEBUG: allocated [a Const] ( 3 nil ) from 0x60005b2c0 to 0x60005b2e0 ( 32 B ) in 2800 ns
DEBUG: allocated [a Const] ( 2 ( 3 nil ) ) from 0x60005b480 to 0x60005b4a0 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( 1 ( 2 ( 3 nil ) ) ) from 0x60005b4a0 to 0x60005b4c0 ( 32 B ) in 2100 ns
DEBUG: allocated nil from 0x60005ab88 to 0x60005ab98 ( 16 B ) in 800 ns
DEBUG: allocated [a Const] ( ( 1 ( 2 ( 3 nil ) ) ) nil ) from 0x60005b4c0 to 0x60005b4e0 ( 32 B ) in 2500 ns
DEBUG: collecting garbage to free 32 B
DEBUG:   freed [a Const] ( third ( caddr nil ) ) from 0x60005aad8 to 0x60005aaf8 ( 32 B )
DEBUG:   freed [a Const] ( define ( third ( caddr nil ) ) ) from 0x60005aaf8 to 0x60005ab18 ( 32 B )
DEBUG:   freed [an Object]  from 0x60005ab18 to 0x60005ab28 ( 16 B )
DEBUG:   empty space from 0x60005abe8 to 0x60005ac00 ( 24 B )
DEBUG:   empty space from 0x60005b068 to 0x60005b070 ( 8 B )
DEBUG:   empty space from 0x60005b090 to 0x60005b098 ( 8 B )
DEBUG:   empty space from 0x60005b288 to 0x60005b2a0 ( 24 B )
DEBUG:   empty space from 0x60005b2e0 to 0x60005b2f0 ( 16 B )
DEBUG:   empty space from 0x60005b308 to 0x60005b318 ( 16 B )
DEBUG:   empty space from 0x60005b4e0 to 0x60005b4f0 ( 16 B )
DEBUG:   freed [a Symbol] define from 0x60005b4f0 to 0x60005b508 ( 24 B )
DEBUG:   freed [a Symbol] third from 0x60005b508 to 0x60005b520 ( 24 B )
DEBUG:   freed [a Symbol] caddr from 0x60005b520 to 0x60005b538 ( 24 B )
DEBUG:   freed nil from 0x60005b538 to 0x60005b548 ( 16 B )
DEBUG:   empty space from 0x60005b548 to 0x60005b560 ( 24 B )
DEBUG:   empty space from 0x60005b580 to 0x60005b598 ( 24 B )
DEBUG:   empty space from 0x60005b810 to 0x60005b820 ( 16 B )
DEBUG:   freed [a Const] ( caddr nil ) from 0x60005b860 to 0x60005b880 ( 32 B )
DEBUG:   empty space from 0x60005b880 to 0x60005b898 ( 24 B )
DEBUG:   empty space from 0x60005b958 to 0x60005b970 ( 24 B )
DEBUG: garbage collected - freed enough memory
DEBUG: allocated [a Const] ( first ( ( 1 ( 2 ( 3 nil ) ) ) nil ) ) from 0x60005aad8 to 0x60005aaf8 ( 32 B ) in 180700 ns
1
> DEBUG: allocated [a Symbol] second from 0x60005aaf8 to 0x60005ab10 ( 24 B ) in 2800 ns
DEBUG: allocated [an Integer] 1 from 0x60005ab10 to 0x60005ab28 ( 24 B ) in 800 ns
DEBUG: allocated [an Integer] 2 from 0x60005abe8 to 0x60005ac00 ( 24 B ) in 900 ns
DEBUG: allocated [an Integer] 3 from 0x60005b288 to 0x60005b2a0 ( 24 B ) in 1200 ns
DEBUG: allocated nil from 0x60005b2e0 to 0x60005b2f0 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( 3 nil ) from 0x60005b4e0 to 0x60005b500 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( 2 ( 3 nil ) ) from 0x60005b500 to 0x60005b520 ( 32 B ) in 2000 ns
DEBUG: allocated [a Const] ( 1 ( 2 ( 3 nil ) ) ) from 0x60005b520 to 0x60005b540 ( 32 B ) in 1700 ns
DEBUG: allocated nil from 0x60005b308 to 0x60005b318 ( 16 B ) in 800 ns
DEBUG: allocated [a Const] ( ( 1 ( 2 ( 3 nil ) ) ) nil ) from 0x60005b540 to 0x60005b560 ( 32 B ) in 900 ns
DEBUG: allocated [a Const] ( second ( ( 1 ( 2 ( 3 nil ) ) ) nil ) ) from 0x60005b860 to 0x60005b880 ( 32 B ) in 2100 ns
2
> DEBUG: allocated [a Symbol] third from 0x60005b580 to 0x60005b598 ( 24 B ) in 2500 ns
DEBUG: allocated [an Integer] 1 from 0x60005b880 to 0x60005b898 ( 24 B ) in 1200 ns
DEBUG: allocated [an Integer] 2 from 0x60005b958 to 0x60005b970 ( 24 B ) in 1600 ns
DEBUG: collecting garbage to free 24 B
DEBUG:   freed [a Const] ( first ( ( 1 ( 2 ( 3 nil ) ) ) nil ) ) from 0x60005aad8 to 0x60005aaf8 ( 32 B )
DEBUG:   freed [a Symbol] second from 0x60005aaf8 to 0x60005ab10 ( 24 B )
DEBUG:   freed [an Integer] 1 from 0x60005ab10 to 0x60005ab28 ( 24 B )
DEBUG:   freed [a Symbol] first from 0x60005ab28 to 0x60005ab40 ( 24 B )
DEBUG:   freed [an Integer] 1 from 0x60005ab40 to 0x60005ab58 ( 24 B )
DEBUG:   freed nil from 0x60005ab58 to 0x60005ab68 ( 16 B )
DEBUG:   freed nil from 0x60005ab88 to 0x60005ab98 ( 16 B )
DEBUG:   freed [an Integer] 2 from 0x60005abb8 to 0x60005abd0 ( 24 B )
DEBUG:   freed [an Integer] 3 from 0x60005abd0 to 0x60005abe8 ( 24 B )
DEBUG:   freed [an Integer] 2 from 0x60005abe8 to 0x60005ac00 ( 24 B )
DEBUG:   empty space from 0x60005b068 to 0x60005b070 ( 8 B )
DEBUG:   empty space from 0x60005b090 to 0x60005b098 ( 8 B )
DEBUG:   freed [an Integer] 3 from 0x60005b288 to 0x60005b2a0 ( 24 B )
DEBUG:   freed [a Const] ( 3 nil ) from 0x60005b2c0 to 0x60005b2e0 ( 32 B )
DEBUG:   freed nil from 0x60005b2e0 to 0x60005b2f0 ( 16 B )
DEBUG:   freed nil from 0x60005b308 to 0x60005b318 ( 16 B )
DEBUG:   freed [a Const] ( 2 ( 3 nil ) ) from 0x60005b480 to 0x60005b4a0 ( 32 B )
DEBUG:   freed [a Const] ( 1 ( 2 ( 3 nil ) ) ) from 0x60005b4a0 to 0x60005b4c0 ( 32 B )
DEBUG:   freed [a Const] ( ( 1 ( 2 ( 3 nil ) ) ) nil ) from 0x60005b4c0 to 0x60005b4e0 ( 32 B )
DEBUG:   freed [a Const] ( 3 nil ) from 0x60005b4e0 to 0x60005b500 ( 32 B )
DEBUG:   freed [a Const] ( 2 ( 3 nil ) ) from 0x60005b500 to 0x60005b520 ( 32 B )
DEBUG:   freed [a Const] ( 1 ( 2 ( 3 nil ) ) ) from 0x60005b520 to 0x60005b540 ( 32 B )
DEBUG:   freed [a Const] ( ( 1 ( 2 ( 3 nil ) ) ) nil ) from 0x60005b540 to 0x60005b560 ( 32 B )
DEBUG:   empty space from 0x60005b810 to 0x60005b820 ( 16 B )
DEBUG:   freed [a Const] ( second ( ( 1 ( 2 ( 3 nil ) ) ) nil ) ) from 0x60005b860 to 0x60005b880 ( 32 B )
DEBUG: garbage collected - freed enough memory
DEBUG: allocated [an Integer] 3 from 0x60005aad8 to 0x60005aaf0 ( 24 B ) in 278800 ns
DEBUG: allocated nil from 0x60005aaf0 to 0x60005ab00 ( 16 B ) in 2500 ns
DEBUG: allocated [a Const] ( 3 nil ) from 0x60005ab00 to 0x60005ab20 ( 32 B ) in 2100 ns
DEBUG: allocated [a Const] ( 2 ( 3 nil ) ) from 0x60005ab20 to 0x60005ab40 ( 32 B ) in 1700 ns
DEBUG: allocated [a Const] ( 1 ( 2 ( 3 nil ) ) ) from 0x60005ab40 to 0x60005ab60 ( 32 B ) in 2500 ns
DEBUG: allocated nil from 0x60005ab88 to 0x60005ab98 ( 16 B ) in 1200 ns
DEBUG: allocated [a Const] ( ( 1 ( 2 ( 3 nil ) ) ) nil ) from 0x60005abb8 to 0x60005abd8 ( 32 B ) in 2500 ns
DEBUG: allocated [a Const] ( third ( ( 1 ( 2 ( 3 nil ) ) ) nil ) ) from 0x60005abd8 to 0x60005abf8 ( 32 B ) in 2000 ns
3
> DEBUG: allocated nil from 0x60005b288 to 0x60005b298 ( 16 B ) in 2900 ns
empty input, ending
