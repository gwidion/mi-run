(+)
(+ 1 1)
(+ 5 5 5 5 5)
(-)
(- 5)
(- 30 10 10 10)
(*)
(* 6)
(* 2 2 2 2)
(= 1)
(= 10 10)
(= 5 2)
(= 2 3 5)
(< 4)
(< 2 3)
(< 2 3 5)
(> 4)
(> 2 3)
(> 2 3 5)
(if (< 2 3) (+ 1 0) (+ 0 0))
(if (< 3 2) (+ 1 0) (+ 0 0))
(define not (lambda (bool) (if bool #f #t)))
(define and (lambda (a b) (if a b #f)))
(define or (lambda (a b) (if a #t b)))
(define square (lambda (n) (* n n) ) )
(define fac (lambda (n) (if (= n 1) 1 (* n (fac (- n 1) ) ) ) ) )
(define a 10)
(define b 20)
(not #t)
(not (= 3 4))
(and #t #t)
(square a)
(square (* 2 1))
(fac 4)